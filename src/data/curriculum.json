{
	"className": "FbW-D01",
	"modules": [
		{
			"title": "1. Basic Digital Literacy",
			"abbreviation": "BDL"
		},
		{
			"title": "2. User Interface Basics",
			"abbreviation": "UIB"
		},
		{
			"title": "3. Programming Basics",
			"abbreviation": "PB"
		},
		{
			"title": "4. Single-Page-Application",
			"abbreviation": "SPA",
			"submodules": [
				{
					"title": "4.01 DOM",
					"abbreviation": "DOM",
					"totalDays": 4,
					"overview": "Understanding the built-in DOM APIs in the browser is the first stepping stone in creating a truly dynamic experience. In this sub module, you will be acquainted with writing JavaScript for the browser environment and using it to explore and manipulate the document structure. Making the web interactive requires us to attach functionality and react to actions the user might perform on the page.",
					"objectives": [
						"Add scripts to an HTML document",
						"Select, add, remove and manipulate elements from the DOM",
						"Add and remove event listeners to and from elements in the DOM",
						"Use common keyboard, mouse and form events to execute code",
						"Use event delegation techniques to optimize the user experience"
					],
					"resources": [
						{
							"category": "DOM",
							"url": "https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction",
							"notes": [
								"The Document Object Model (DOM) is the **data representation of the objects that comprise the structure and content of a document on the web**",
								"The DOM is a **programming interface for web documents**",
								"represents the document as nodes and objects so programming languages can interact with the page",
								"the DOM can be modified with a scripting language such as JavaScript",
								"the DOM is not a programming language, but without it, the JavaScript language wouldn't have any model or notion of web pages",
								"the DOM is not part of the JavaScript language, but is instead a Web API used to build websites",
								"JavaScript can also be used in other contexts. For example, Node.js runs JavaScript programs on a computer, but provides a different set of APIs"
							]
						}
					],
					"flashcards": [
						{
							"front": "What does DOM stand for?",
							"back": "Document Object Model"
						},
						{
							"front": "Name four browsers and the JavaScript Engines they use.",
							"back": "- Google Chrome uses V8\r\n- Firefox uses SpiderMonkey\r\n- Safari uses JavaScriptCore\r\n- Microsoft Edge formerly used Chakra but now is based on Chromium and hence uses V8 as Chrome does\r\n"
						},
						{
							"front": "What is the difference between a tag and an element on an HTML page?",
							"back": "Technically, an HTML **element** is the collection of *start tag*, its attributes, an *end tag* and everything in between. On the other hand an HTML **tag** (either opening or closing) is used to mark the start or end of an element. However, in common usage the terms HTML element and HTML tag are interchangeable i.e. a tag is an element is a tag."
						},
						{
							"front": "What tag do you use to add JavaScript to an HTML page?",
							"back": "`<script>`"
						},
						{
							"front": "What tag do you use to add CSS to an HTML page?",
							"back": "`<style>`"
						},
						{
							"front": "In JavaScript, what are differences between and examples of native and host objects?",
							"back": "- native object \r\n\t- objects in an ECMAScript implementation whose semantics are fully defined by this specification rather than by the host environment\r\n\t- EXAMPLES: String, Math, RegExp, Object, Function\r\n- host object\r\n\t- objects provided by the browser environment which are distinct from native objects because not all environments will have the same host objects\r\n\t- EXAMPLES IN BROWSER: window, XmlHttpRequest, History\r\n\t- EXAMPLES IN NODE:, in Node http, https, fs, url, os  \r\n\t\t- `const url = require('url');`\r\n\t\t- `const fs = require('fs');`",
							"moreInfo": [
								{
									"title": "Stack Overflow: What is the difference between native objects and host objects?",
									"url": "https://stackoverflow.com/questions/7614317/what-is-the-difference-between-native-objects-and-host-objects"
								}
							]
						},
						{
							"front": "What object on the browser will 'console.log(this)' return?",
							"back": "`Window`"
						},
						{
							"front": "In a simple Node script, what will 'console.log(this)' return?",
							"back": "`object`",
							"moreInfo": [
								{
									"title": "Stack Overflow: Why does console.log(this) in node return an empty object?",
									"url": "https://stackoverflow.com/questions/42631698/why-does-console-logthis-in-node-return-an-empty-object"
								}
							]
						},
						{
							"front": "Name three ways you can get a single HTML element into a JavaScript variable?",
							"back": "- `document.getElementById()`\r\n- `document.getElementByClassName()`\r\n- `document.querySelector()`"
						},
						{
							"front": "How can you get a numerous elements into a JavaScript variable?",
							"back": "`document.getQuerySelectorAll()`"
						},
						{
							"front": "What does `Element.classList` do?",
							"back": "A CSS property that returns the class names of an element, as an array-like DOMTokenList object",
							"moreInfo": [
								{
									"title": "W3Schools: HTML DOM classList Property",
									"url": "https://www.w3schools.com/jsref/prop_element_classlist.asp"
								},
								{
									"title": "MDN: Element.classList",
									"url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"
								}
							]
						},
						{
							"front": "Name two ways to add text to an HTML element?",
							"back": "- `Element.innerHTML`\r\n- `Element.innerText`"
						},
						{
							"front": "Name 10 examples of JavaScript events.",
							"back": "- `change`: An HTML element has been changed\r\n- `click`: The user clicks an HTML element\r\n- `mouseover`: The user moves the mouse over an HTML element or its children\r\n- `mouseenter`: the user moves the mouse into an HTML element\r\n- `mousemove`: The user moves the mouse inside an HTML element\r\n- `mouseout`: The user moves the mouse away from an HTML element\r\n- `keydown`: The user pushes a keyboard key\r\n- `load`: The browser has finished loading the page\r\n- `submit`: The user submits a form\r\n- `keyup`: The user releases a key on the keyboard",
							"moreInfo": [
								{
									"title": "JavaScript Event Types",
									"url": "https://data-flair.training/blogs/javascript-event-types"
								}
							]
						},
						{
							"front": "What does `Event.preventDefault` do?",
							"back": "- stops default action\/behavior on the event it was called upon\r\n- it cancels the event, meaning that any default action normally taken by the implementation as a result of the event will not occur\r\n- e.g. prevent the link above from following the URL, or prevent the form from submitting data"
						}
					],
					"days": [
						{
							"date": "2021-08-16",
							"title": "7 DOM Exercises (Guessing Game to Weekend Countdown)",
							"videos": [
								{
									"description": "Explanation of exercises 401-407 and the DOM methods used in the solutions",
									"url": "https://drive.google.com/file/d/1ekdmIfNpoxACJ2Rmvl16QX2xjcf_wwJS/view"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "The Guessing Game",
									"url": "https://github.com/FbW-D01/Exercise-401-SPA-DOM-Window-Prompt-Guessing-Game",
									"description": "simple game showing the use of prompt()",
									"status": {
										"finished": "reidfleites, osama274, bakkar3, elis-11, Khambazarov, Heba-Dughmosh, Suha995, Fatihce57, Pierluigi10, gamzeumac",
										"unfinished": "heavypete, Degi100, giacomotolari, paulam92, Consciously, Saeideh-Fasih, herrbaha, deyuhub, NikoHamburg"
									},
									"rank": 3.7,
									"topics": [
										{
											"title": "window.prompt()",
											"url": "https://www.w3schools.com/jsref/met_win_prompt.asp"
										},
										{
											"title": "document.getElementById()",
											"url": "https://www.w3schools.com/jsref/met_document_getelementbyid.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Menu Styling",
									"url": "https://github.com/FbW-D01/Exercise-402-SPA-DOM-Query-Html-And-Style",
									"description": "academic example showing that styling done with 100% JavaScript instead of CSS",
									"rank": 4.1,
									"status": {
										"finished": "reidfleites, osama274, bakkar3, elis-11, giacomotolari, Heba-Dughmosh, herrbaha, Fatihce57, gamzeumac",
										"unfinished": "heavypete, Degi100, Khambazarov, paulam92, Suha995, Consciously, Saeideh-Fasih, deyuhub, NikoHamburg, Pierluigi10"
									},
									"topics": [
										{
											"title": "querySelector()",
											"url": "https://www.w3schools.com/jsref/met_document_queryselector.asp"
										},
										{
											"title": "querySelectorAll()",
											"url": "https://www.w3schools.com/jsref/met_document_queryselectorall.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "The Book List",
									"url": "https://github.com/FbW-D01/Exercise-403-SPA-DOM-Create-Book-Site-With-Elements",
									"description": "academic example showing how styling can be done with a combination of JavaScript and CSS",
									"status": {
										"finished": "reidfleites, giacomotolari, Pierluigi10, gamzeumac",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg"
									},
									"rank": 4.3,
									"topics": [
										{
											"title": "classList",
											"url": "https://www.w3schools.com/jsref/prop_element_classlist.asp"
										},
										{
											"title": "createElement()",
											"url": "https://www.w3schools.com/jsref/met_document_createelement.asp"
										},
										{
											"title": "appendChild()",
											"url": "https://www.w3schools.com/jsref/met_node_appendchild.asp"
										},
										{
											"title": "textContent()",
											"url": "https://www.w3schools.com/jsref/prop_node_textcontent.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Extreme Travel Website",
									"url": "https://github.com/FbW-D01/Exercise-404-SPA-DOM-Traversing-Html-With-JavaScript",
									"description": "another rather academic example of using JavaScript to enhance CSS styling",
									"rank": 3.3,
									"status": {
										"finished": "reidfleites, giacomotolari, Pierluigi10",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, gamzeumac"
									},
									"topics": [
										{
											"title": "closest()",
											"url": "https://www.w3schools.com/jsref/met_element_closest.asp"
										},
										{
											"title": "previousElementSibling()",
											"url": "https://www.w3schools.com/jsref/prop_element_previouselementsibling.asp"
										},
										{
											"title": "children",
											"url": "https://www.w3schools.com/jsref/prop_element_children.asp"
										},
										{
											"title": "innerText",
											"url": "https://www.w3schools.com/jsref/prop_node_innertext.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Parents list",
									"url": "https://github.com/FbW-D01/Exercise-405-SPA-DOM-Traversing-Parents-List",
									"description": "academic exercise demonstratrating how to list out all parent nodes of an element",
									"rank": 2.1,
									"status": {
										"finished": "reidfleites",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "nodeName",
											"url": "https://www.w3schools.com/jsref/prop_node_nodename.asp"
										},
										{
											"title": "parentElement",
											"url": "https://www.w3schools.com/jsref/prop_node_parentelement.asp"
										},
										{
											"title": "unshift()",
											"url": "https://www.w3schools.com/jsref/jsref_unshift.asp"
										},
										{
											"title": "Array.from()",
											"url": "https://www.w3schools.com/jsref/jsref_from.asp",
											"notes": [
												"DOMTokenList is an array-like object"
											]
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Counting children",
									"url": "https://github.com/FbW-D01/Exercise-406-SPA-DOM-Traversing-Html-Childen",
									"description": "an academic exercise showing how to count the children of each node",
									"status": {
										"finished": "reidfleites, gamzeumac",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10"
									},
									"rank": 1.1,
									"topics": [
										{
											"title": "childElementCount",
											"url": "https://www.w3schools.com/jsref/prop_element_childelementcount.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Weekend Countdown",
									"url": "https://github.com/FbW-D01/Exercise-407-SPA-DOM-Event-Weekend-Countdown",
									"description": "simple form that changes text when button is clicked",
									"status": {
										"finished": "reidfleites, Fatihce57",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.1,
									"topics": [
										{
											"title": "addEventListener()",
											"url": "https://www.w3schools.com/jsref/met_element_addeventlistener.asp"
										},
										{
											"title": "new Date()",
											"url": "https://www.w3schools.com/js/js_dates.asp"
										},
										{
											"title": "toLocaleDateString()",
											"url": "https://www.w3schools.com/jsref/jsref_tolocaledatestring.asp"
										}
									],
									"released": true
								}
							]
						},
						{
							"date": "2021-08-17",
							"title": "7 DOM Exercises (Favorite Destinations to Sound of Silence)",
							"videos": [
								{
									"description": "Explanation of exercises 408-414",
									"url": "https://drive.google.com/file/d/1f5wsFpJNPlEsqU3_KlatmAjnVlka0lX5"
								},
								{
									"description": "Exercise 414 Live Coding",
									"url": "https://drive.google.com/file/d/1Wcze2cerhF6JUKJcCVYCv_pxPgNJn-6f",
									"extra": "code here: _EXERCISES/Exercise-414-SPA-DOM-Event-Sound-of-Silence/solution-GROUP"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Toggle Favourite Destinations",
									"url": "https://github.com/FbW-D01/Exercise-408-SPA-DOM-Event-Item-Toggle",
									"rank": 4.5,
									"description": "good example of JavaScript interactions on the page",
									"status": {
										"finished": "reidfleites",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "classList",
											"url": "https://www.w3schools.com/jsref/prop_element_classlist.asp"
										},
										{
											"title": "innerHTML",
											"url": "https://www.w3schools.com/js/js_htmldom_html.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Calculator",
									"url": "https://github.com/FbW-D01/Exercise-409-SPA-DOM-Event-Calculator",
									"rank": 4.6,
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"description": "a functional calculator",
									"topics": [
										{
											"title": "window.addEventListener()",
											"url": "https://www.w3schools.com/js/js_htmldom_eventlistener.asp"
										},
										{
											"title": "querySelector()",
											"url": "https://www.w3schools.com/jsref/met_document_queryselector.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Newsletter Subscription Overlay (Popup)",
									"url": "https://github.com/FbW-D01/Exercise-410-SPA-DOM-Event-Newsletter-Subscription-Overlay-effect",
									"rank": 2.3,
									"description": "unrealistic/academic example of mousemove, good example of \"this = that\"",
									"status": {
										"finished": "reidfleites",
										"unfinished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "this = that",
											"url": "https://stackoverflow.com/questions/4886632/what-does-var-that-this-mean-in-javascript"
										},
										{
											"title": "removeEventListener()",
											"url": "https://www.w3schools.com/jsref/met_element_removeeventlistener.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Carousel",
									"url": "https://github.com/FbW-D01/Exercise-411-SPA-DOM-Event-Carousel",
									"description": "creative and useful implementation of carousel",
									"status": {
										"finished": "bakkar3, Khambazarov, giacomotolari, Fatihce57, Pierluigi10, gamzeumac",
										"unfinished": "reidfleites, osama274, heavypete, elis-11, Degi100, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, NikoHamburg"
									},
									"rank": 5.0,
									"topics": [
										{
											"title": "JavaScript altering of CSS translate()",
											"url": "https://www.w3schools.com/css/tryit.asp?filename=trycss3_transform_translate"
										},
										{
											"title": "addEventListener()",
											"url": "https://www.w3schools.com/jsref/met_element_addeventlistener.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Password Generator",
									"url": "https://github.com/FbW-D01/Exercise-412-SPA-DOM-Event-Password-Generator",
									"rank": 4.5,
									"description": "good example of form handling with submit button",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "store fields as object in form handling"
										},
										{
											"title": "dynamic event attaching"
										},
										{
											"title": "submit form with JavaScript"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Profile Page",
									"url": "https://github.com/FbW-D01/Exercise-413-SPA-DOM-Event-Profile-Page",
									"rank": 4.3,
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"description": "an example of creating a report from data on a form",
									"topics": [
										{
											"title": "appendChild()",
											"url": "https://www.w3schools.com/jsref/met_node_appendchild.asp"
										},
										{
											"title": "removeChild()",
											"url": "https://www.w3schools.com/jsref/met_node_removechild.asp"
										},
										{
											"title": "image uploading emulation with JavaScript"
										},
										{
											"title": "checkbox processing with JavaScript"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "The Sound of Silence",
									"url": "https://github.com/FbW-D01/Exercise-414-SPA-DOM-Event-Sound-of-Silence",
									"rank": 5.0,
									"status": {
										"finished": "herrbaha, Fatihce57",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, deyuhub, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"description": "good example of instant searching and filtering feature using fetch()",
									"topics": [
										{
											"title": "currying-like notation ()()",
											"url": "https://www.tutorialspoint.com/what-is-currying-in-javascript"
										},
										{
											"title": "class setter to change object state (online/offline)"
										},
										{
											"title": "fetch JSON file",
											"url": "https://developers.google.com/web/updates/2015/03/introduction-to-fetch"
										}
									],
									"released": true
								}
							]
						},
						{
							"date": "2021-08-18",
							"title": "7 DOM Exercises (Random Colors to Tree Menu)",
							"videos": [
								{
									"description": "Explanation of exercises 415-421",
									"url": "https://drive.google.com/file/d/1ZT-ZpNrTaomxbnf6PcpTCbEsy852IhNe"
								},
								{
									"description": "Exercise 415 Live Coding",
									"url": "https://drive.google.com/file/d/1C9LuSb7VEqUXxcK-KTmEdtpcPt9x8xU9",
									"extra": "code here: _EXERCISES/Exercise-415-SPA-DOM-Event-Random-Color-Generator/solution-GROUP"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Random Color Generator",
									"url": "https://github.com/FbW-D01/Exercise-415-SPA-DOM-Event-Random-Color-Generator",
									"description": "small website that shows random colors, good interactivity",
									"status": {
										"finished": "bakkar3",
										"unfinished": "reidfleites, osama274, heavypete, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.7,
									"topics": [
										{
											"title": "loading graphic (emulated)"
										},
										{
											"title": "closest()",
											"url": "https://www.w3schools.com/jsref/met_element_closest.asp"
										},
										{
											"title": "classList.add()",
											"url": "https://www.w3schools.com/jsref/prop_element_classlist.asp"
										},
										{
											"title": "preventDefault()",
											"url": "https://www.w3schools.com/jsref/event_preventdefault.asp"
										},
										{
											"title": "FontAwesome"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "To-Do List App",
									"url": "https://github.com/FbW-D01/Exercise-416-SPA-DOM-Event-To-Do-List",
									"description": "a simple task creation app which allows you to delete the tasks",
									"rank": 4.3,
									"status": {
										"finished": "Fatihce57",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "addEventListener(<event>, fn{}) vs. on<event> = fn{}",
											"url": "https://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick"
										},
										{
											"title": "preventDefault()",
											"url": "https://www.w3schools.com/jsref/event_preventdefault.asp"
										},
										{
											"title": "removeChild()",
											"url": "https://www.w3schools.com/jsref/met_node_removechild.asp"
										},
										{
											"title": "e.target.parentElement",
											"url": "https://www.w3schools.com/jsref/prop_node_parentelement.asp"
										},
										{
											"title": "createElement()",
											"url": "https://www.w3schools.com/jsref/met_document_createelement.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Registration Form",
									"url": "https://github.com/FbW-D01/Exercise-417-SPA-DOM-Event-Registration-Form",
									"description": "demonstrates how to make a multi-page form",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.1,
									"topics": [
										{
											"title": "checkValidity()",
											"url": "https://www.w3schools.com/js/js_validation_api.asp"
										},
										{
											"title": "calling class methods from HTML"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Dropdown",
									"url": "https://github.com/FbW-D01/Exercise-418-SPA-DOM-Event-Dropdown",
									"description": "somewhat realistic dropdown menu",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.4,
									"topics": [
										{
											"title": "window.onload",
											"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Dynamic Pills",
									"url": "https://github.com/FbW-D01/Exercise-419-SPA-DOM-Event-Dynamic-Pills",
									"description": "realistic, animated display menu",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.7,
									"topics": [
										{
											"title": "classList.contains()",
											"url": "https://www.w3schools.com/jsref/met_node_contains.asp"
										},
										{
											"title": "classList.remove()",
											"url": "https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_element_classlist_remove"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Hide messages with delegation",
									"url": "https://github.com/FbW-D01/Exercise-420-SPA-DOM-Event-Delegation-Hide-Messages",
									"description": "simple exercise that has panels with close buttons",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.1,
									"topics": [
										{
											"title": "access elements directly as their variable name"
										},
										{
											"title": "closest()",
											"url": "https://www.w3schools.com/jsref/met_element_closest.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Tree menu",
									"url": "https://github.com/FbW-D01/Exercise-421-SPA-DOM-Event-Delegation-Tree-Menu",
									"description": "small, creative and reusable example of collapsable tree structure",
									"rank": 4.8,
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "prepend()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/prepend"
										},
										{
											"title": "append()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/append"
										}
									],
									"released": true
								}
							]
						},
						{
							"date": "2021-08-19",
							"title": "6 DOM Exercises (Password Field to Todo List)",
							"videos": [
								{
									"description": "Explanation of exercises 422-427",
									"url": "https://drive.google.com/file/d/1bU9mRxNbcu-I4WynPN-vGUOD853KZd1s"
								},
								{
									"description": "Exercise 427 Live Coding - Extended Task List to save data in cookies",
									"url": "https://drive.google.com/file/d/1bU9mRxNbcu-I4WynPN-vGUOD853KZd1s",
									"extra": "code here: _EXERCISES\\Exercise-427-SPA-DOM-TODOs-App\\solution-EDWARD"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Form Password Field",
									"url": "https://github.com/FbW-D01/Exercise-422-SPA-DOM-Browser-PasswordField",
									"description": "use frontend modules in show-password example",
									"rank": 4.9,
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"topics": [
										{
											"title": "import from module on frontend",
											"url": "https://www.sitepoint.com/using-es-modules"
										},
										{
											"title": "setAttribute()",
											"url": "https://www.w3schools.com/jsref/met_element_setattribute.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Vanilla JavaScript Stopwatch",
									"url": "https://github.com/FbW-D01/Exercise-423-SPA-DOM-StopWatch-App",
									"description": "implementation of a stopwatch with start/stop/reset buttons",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.5,
									"topics": [
										{
											"title": "setInterval()",
											"url": "https://www.w3schools.com/jsref/met_win_setinterval.asp"
										},
										{
											"title": "clearInterval()",
											"url": "https://www.w3schools.com/jsref/met_win_clearinterval.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "JavaScript Clock",
									"url": "https://github.com/FbW-D01/Exercise-424-SPA-DOM-Digital-Clock-App",
									"description": "simple clock",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.3,
									"topics": [
										{
											"title": "javascript modules with static class method",
											"url": "https://www.sitepoint.com/using-es-modules"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "JavaScript Guess-The-Color Game",
									"url": "https://github.com/FbW-D01/Exercise-425-SPA-DOM-Guess-Color-App",
									"description": "complete game of choosin the correct color",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.8,
									"topics": [
										{
											"title": "javascript modules with static class method",
											"url": "https://www.sitepoint.com/using-es-modules"
										},
										{
											"title": "textContent()",
											"url": "https://www.w3schools.com/jsref/prop_node_textcontent.asp"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "JavaScript Calculator",
									"url": "https://github.com/FbW-D01/Exercise-426-SPA-DOM-Calculator-App",
									"description": "functioning calculator app",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.8,
									"topics": [
										{
											"title": "javascript modules with static class method",
											"url": "https://www.sitepoint.com/using-es-modules"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"title": "JavaScript Todo List",
									"url": "https://github.com/FbW-D01/Exercise-427-SPA-DOM-TODOs-App",
									"description": "simple todo app",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rank": 4.1,
									"topics": [
										{
											"title": "class-like IIFE ",
											"url": "https://www.tutorialsteacher.com/javascript/immediately-invoked-function-expression-iife"
										},
										{
											"title": "createTextNode()",
											"url": "https://www.w3schools.com/jsref/met_document_createtextnode.asp"
										}
									],
									"released": true
								}
							]
						}
					]
				},
				{
					"title": "4.02 Modules",
					"abbreviation": "MOD",
					"totalDays": 2,
					"overview": "Code organization is key to maintaining large projects. In this sub module, you will explore the new ES6 module syntax, and utilize it to separate your code into small maintainable modules, as well as work with tools to ensure cross browser support and code optimization.",
					"objectives": [
						"Understand common use cases and advantages of separating JavaScript files into modules",
						"Add module-based JavaScript files to an HTML document",
						"Use ESNext syntax to import and export expressions from modules",
						"Understand the context of package bundlers such as Webpack and Parcel",
						"Understand and explain the advantages of using transpilers such as Babel for browser compatibility",
						"Understand the difference between project dependencies and development dependencies",
						"Add and use third party modules from the npm registry"
					],
					"resources": [
						{
							"title": "ES5 to ESNext — here’s every feature added to JavaScript since 2015",
							"url": "https://www.freecodecamp.org/news/es5-to-esnext-heres-every-feature-added-to-javascript-since-2015-d0c255e13c6e",
							"notes": [
								"JavaScript evolved in a very short time from callbacks to promises (ES2015), and **since ES2017 asynchronous JavaScript is even simpler with the async/await syntax**.",
								"**Async functions are a combination of promises and generators**, and basically, they are a higher level abstraction over promises. Let me repeat: **async/await is built on promises**.",
								"async/await reduces the boilerplate around promises",
								"Promises were introduced to solve the famous callback hell problem, but they introduced complexity on their own: syntax complexity.",
								"Async functions make the code look like it’s synchronous, but it’s asynchronous and non-blocking behind the scenes.",
								"**Debugging async/await code is easier**: Debugging promises is hard because the debugger will not step over asynchronous code.  Async/await makes this very easy because to the compiler it’s just like synchronous code."
							],
							"rank": 4.8
						},
						{
							"title": "Module Bundlers Explained... Webpack, Rollup, Parcel, and Snowpack",
							"time": "9:55",
							"url": "https://www.youtube.com/watch?v=5IG4UmULyoA",
							"notes": [
								"at the base there is always JavaScript, HTML and CSS, but today there are a lot more technologies, hence bundlers to bring it all together",
								"good description of the complexity of building from HTML, CSS, JavaScript",
								"mention SnowPack, video is from Oct 2020: an alternative to heavier, more complex bundlers like webpack or Parcel in your development workflow, is different, and represents the future of front-end development",
								"bundlers take many JavaScript files and compile them into  one: your source code plus third-party dependencies",
								"demo: index.js, `npm init -y`, `npm i lodash`, index.html, lodash: lodash camelcase, installs webpack with two commands, in script, build: webpack, main: index.js, into dist, html now points to ../dist/main.js, webpack.config.js is itself a JavaScript module, output, use path.resolve",
								"also manages scss, loaders, there are loaders for everything: style-loader, css-loader, (in module rules), sass-loader",
								"plugins: tap into life-cycle, webpack-bundle-analyzer, so only installs the commands from lodash he needs",
								"webpack-dev-server",
								"parcel has less configuration",
								"**snowpack: webpack is slow, snowpack is faster, reflected instantly**"
							]
						}
					],
					"flashcards": [
						{
							"front": "What is an IIFE and what are two ways to write its syntax?",
							"back": "- Immediately-Invoked Function Expression\r\n- `(function() { } )()`\r\n- `(() => { } )()`",
							"moreInfo": [
								{
									"title": "MDN: IIFE",
									"url": "https://developer.mozilla.org/en-US/docs/Glossary/IIFE"
								}
							]
						},
						{
							"front": "How to import and export React components?",
							"back": "- `export default MyComponent;`\r\n- `import MyComponent from \".\/MyComponent\";`"
						},
						{
							"front": "How do you create a `package.json` file to set up a Node project?",
							"back": "- `npm init`\r\n- or `npm init -y` to skip the questions"
						}
					],
					"days": [
						{
							"date": "2021-08-23",
							"title": "ES6 Frontend Modules",
							"videos": [
								{
									"description": "Explanations and Live-Coding",
									"url": "https://drive.google.com/file/d/1PsOSY6e9oWU-r7rXJO3I7QEBJZiwNzHu"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "Why Modules?",
									"topics": [
										{
											"title": "Problem: Global variables and spaghetti code"
										},
										{
											"title": "Solution: IIFE, Classes, Modules"
										}
									]
								},
								{
									"kind": "explanation",
									"title": "Browser Module Basics",
									"topics": [
										{
											"title": "`type=\"module\"`"
										},
										{
											"title": "Default exports: `export default <fn>`"
										},
										{
											"title": "Named exports: `export { fn1, fn2, fn2 }`"
										},
										{
											"title": "Export functions, object literals, or classes"
										},
										{
											"title": "Import default: `import <fn> from <fileName>`"
										},
										{
											"title": "Import with destructuring: `import { fn1, fn2, fn3 }`"
										},
										{
											"title": "Import with namespace: `import * as <namespace> from <path>`"
										},
										{
											"title": "**CODE HERE**: `_CODE\\04.02_SPA_MOD\\Explanation-Browser-Module-Basics`"
										}
									]
								},
								{
									"kind": "liveCoding",
									"title": "Build an HTML/CSS/JavaScript website that exports and imports modules",
									"image": "liveCodingFlashcardsApp",
									"topics": [
										{
											"title": "Make an HTML/CSS/JavaScript flashcard website that reads an object literal of flashcards from a module called 'flashcards.js', loads functionality to toggle the flashcards from a module called 'actions.js', and manipulates the text with functions from a module named 'helpers.js'."
										},
										{
											"title": "**CODE HERE**: `_CODE\\04.02_SPA_MOD\\Live-Coding-Flashcards`"
										}
									]
								},
								{
									"kind": "exercise",
									"description": "nnn",
									"when": "After Modules Basics",
									"time": "~15-30mins",
									"title": "Modules: Knit this!",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-modules-basics/tree/master",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/Browser-modules-basics/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-428-SPA-MOD-Browser-modules-basics",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "Degi100, Suha995, Consciously, deyuhub"
									},
									"rawTopics": "Introduction: Modules for smaller files\r\n\"Module Basics:\r\n- Brief overview of IIFE and the Module pattern\r\n- Advantages of scope isolation and encapsulation\r\n- Using modules in the browser: `<script type=\"\"module\"\" src=\"\"...\"\">`\r\n- Connecting files: The `import` and `export` keywords\"",
									"topics": [
										{
											"title": "Modal Box",
											"url": "https://www.w3schools.com/howto/howto_css_modals.asp"
										},
										{
											"title": "images are missing"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"description": "nnn",
									"when": "After imports and exports",
									"time": "~ 30 minutes",
									"title": "Calc X",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-modules-imports-exports/tree/master",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/Browser-modules-imports-exports/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-429-SPA-MOD-Browser-modules-imports-exports",
									"rawTopics": "\"Imports and Exports:\r\n- Default exports vs. named exports: \r\n  `export default`, `export {<var1>, <var2> [, ...]}`\r\n- Namespacing imports: \r\n  `import <namespace> from <path>`, `import * as <namespace> from <path>`\r\n- Destructuring imports: `import { <var1>, <var2 [, ...]} from `<path>`\"",
									"topics": [
										{
											"title": "your task is to write the code in index.js which connects the HTML elements in index.js to the functionality in percentage.js and aspect-ration.js"
										},
										{
											"title": "note that you only have to export the functions that you need in the index.js file"
										}
									],
									"status": {
										"finished": "reidfleites, elis-11, giacomotolari, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "osama274, heavypete, bakkar3, Degi100, Khambazarov, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub"
									},
									"released": true
								},
								{
									"kind": "extraCredit",
									"title": "Build an HTML/CSS/JavaScript website that exports and imports modules",
									"topics": [
										{
											"title": "Make an HTML/CSS/JavaScript website that links a JavaScript file which imports three modules files: ",
											"notes": [
												"module #1: contains an object literal of data that is displayed on the site",
												"module #2: manipulates the data from the object literal",
												"module #3: contains helper functions for styling, text manipulation, etc.",
												"IDEA: a todo list website where the user can check off done items",
												"IDEA: a list of books that shows the titles in different colors depending on their language"
											]
										}
									]
								}
							]
						},
						{
							"date": "2021-08-24",
							"title": "NPM Workflow, Transpiling and Bundling",
							"videos": [
								{
									"description": "2021-08-24_livecode_npm_on_the_frontend",
									"url": "https://drive.google.com/file/d/1SNJoPWqw6LlF6s7eCFEh4HZpN8AVqaAl"
								},
								{
									"description": "2021-08-24_exercise_430",
									"url": "https://drive.google.com/file/d/1J0GT1kKDXc0e56kgflQsqYHTNHiLoMfW"
								},
								{
									"description": "2021-08-24_livecoding_parcel",
									"url": "https://drive.google.com/file/d/16PHp3RQ8KyEAZKVJO8sOMx9tQwJTc-2r"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "Using NPM on the Frontend",
									"topics": [
										{
											"title": "Using external libraries: CDN, manual download or NPM"
										},
										{
											"title": "Finding NPM packages"
										},
										{
											"title": "Setting up NPM for a website: `npm init -y`"
										},
										{
											"title": "installing an NPM package: `npm import <package>`"
										},
										{
											"title": "using an NPM package: link from HTML file to appropriate file in node_modules"
										},
										{
											"title": "package.json: `dependencies` vs. `devDependencies`"
										}
									]
								},
								{
									"kind": "liveCoding",
									"title": "Build a website with Bootstrap and Moment as NPM packages",
									"topics": [
										{
											"title": "`npm init -y`"
										},
										{
											"title": "`npm i bootstrap`"
										},
										{
											"title": "in HTML head: `<link rel=\"stylesheet\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\">`"
										},
										{
											"title": "`npm i moment`"
										},
										{
											"title": "`<script src=\"node_modules/moment/moment.js\"></script>`"
										},
										{
											"title": "`<script src=\"node_modules/moment/locale/de.js\"></script>`"
										},
										{
											"title": "`document.querySelector('.message').innerText = moment().add(100, 'days').format(\"dddd, MMMM Do YYYY, hh:mm:ss\");`"
										},
										{
											"title": "`npm i lodash`"
										},
										{
											"title": "`<script src=\"node_modules/lodash/lodash.js\"></script>`"
										},
										{
											"title": "`console.log(_.uniq(nums));`"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Build Website with NPM packages",
									"url": "https://github.com/FbW-D01/Exercise-430-SPA-MOD-buildWebsiteWithNPMPackages",
									"topics": [
										{
											"title": "with Bootstrap, Lodash and Moment"
										}
									],
									"status": {
										"finished": "reidfleites, osama274, heavypete, elis-11, Khambazarov, giacomotolari, Heba-Dughmosh, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "bakkar3, Degi100, paulam92, Suha995, Consciously, deyuhub"
									},
									"released": true
								},
								{
									"kind": "explanation",
									"title": "What are website bundlers and build tools and why do we need them?",
									"topics": [
										{
											"title": "Problem: developers wanted to program in ES6 but Browsers only supported ES5, developers wanted to program with SASS but browsers only supported CSS, developers wanted to develop with TypeScript but browsers only understood JavaScript, images needed to be optimised, JavaScript needed to be minimized, and CSS and JavaScript needed to be bundled together for optmize loading speed etc."
										},
										{
											"title": "Solution: create tools that preprocess, transpile and optimize all these things into highly-optimized, deployment-ready files"
										},
										{
											"title": "RequireJS, Browserify, Rollup, Grunt, Gulp, Webpack, Parcel",
											"url": "https://onespace.netlify.app/techItems?id=55"
										},
										{
											"title": "React does all this for us in the background, uses Webpack"
										}
									]
								},
								{
									"kind": "liveCoding",
									"title": "Build a HTML/SASS/JavaScript website with Parcel",
									"topics": [
										{
											"title": "How to set up SASS processing for an HTML/CSS site with sass and Parcel",
											"url": "https://onespace.netlify.app/howtos?id=383"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Build Website with Parcel",
									"url": "https://github.com/FbW-D01/Exercise-431-SPA-MOD-buildWebsiteWithParcel",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, Khambazarov, giacomotolari, Heba-Dughmosh, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "elis-11, Degi100, paulam92, Suha995, Consciously, deyuhub"
									},
									"topics": [
										{
											"title": "with Parcel, SASS, Lodash"
										}
									],
									"released": true
								},
								{
									"kind": "exercise",
									"when": "After 3rd Party Dependencies (JavaScript Classes)",
									"time": "2hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-ComingSoon/tree/master",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/Browser-ComingSoon/tree/solution",
									"description": "nnn",
									"rawTopics": "\"Transpiling & Bundling:\r\n- Browser compatibility and modules: Transpiling ES with Babel\r\n- Bundling tools overview: \r\n  Packaging our processed code with Webpack \r\n  (intro ONLY, no need to start writing configs)\"\r\n\"Npm workflow;\r\n- Adding modules to our project: `npm install <module name>`\r\n- Dependency List: \r\n  reading `package.json`, `dependencies` vs. `devDependencies`\r\n- Using 3rd party modules: `import <namespace> from <dependency name>`\"",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true
								}
							]
						}
					]
				},
				{
					"title": "4.03 Asynchronous Programming",
					"abbreviation": "ASY",
					"totalDays": 4,
					"overview": "The web is built on consuming data. In this sub module, you will dive into advanced JavaScript concepts such as `promises` and `async/await` through the usage of the browser's built in `fetch` API to consume data from 3rd party sources.",
					"objectives": [
						"Identify the key characteristics of asynchronous processes",
						"Use `promises` and `async/await` to facilitate an asynchronous workflow",
						"Use `fetch` to retrieve data from an API and parse JSON objects",
						"Use `localStorage` and `sessionStorage` to save data in the browser"
					],
					"resources": [
						{
							"title": "JavaScript Immediately-invoked Function Expressions (IIFE)",
							"url": "https://flaviocopes.com/javascript-iife/",
							"notes": [
								"Immediately-invoked Function Expression is a way to execute functions immediately, as soon as they are created",
								"don't pollute the global object",
								"a simple way to isolate variables declarations",
								"function declarations (e.g with `const` or `let`) need a name, while function expressions do not require it",
								"IIFEs can be defined with arrow functions as well",
								"you might see IIFEs starting with a semicolon: this prevents issues when blindly concatenating two JavaScript files, since JavaScript does not require semicolons, you might concatenate with a file with some statements in its last line that causes a syntax error, but this problem is essentially solved with smart code bundlers like webpack"
							]
						},
						{
							"title": "Async JS Crash Course - Callbacks, Promises, Async Await",
							"url": "https://www.youtube.com/watch?v=PoRJizFvM7s",
							"notes": [
								"ES6: Promises introduced",
								"ES7: async/await introduced, synchronous-style syntax",
								"creates posts with callbacks, then does with promises",
								"(resolve, reject)",
								"`createPost({ title: \"new post\" }).then(getPosts).catch(err => console.log(err))`"
							],
							"time": "24:30"
						},
						{
							"title": "JSON.parse() Vs. .json()",
							"url": "https://stackoverflow.com/questions/48295439/json-parse-vs-json",
							"notes": [
								"`Body.json()` is asynchronous and returns a Promise object that resolves to a JavaScript object. `JSON.parse()` is synchronous can parse a string and change the resulting returned JavaScript object."
							]
						},
						{
							"title": "Promise.reject()",
							"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject",
							"notes": [
								"The static Promise.reject function returns a Promise that is rejected. For debugging purposes and selective error catching, it is useful to make reason an instanceof Error."
							],
							"rank": 1.3
						},
						{
							"title": "Reject a Promise in JavaScript",
							"url": "https://masteringjs.io/tutorials/fundamentals/promise-reject",
							"notes": [
								"The Promise.reject() function is the most concise way to create a rejected promise that contains a given error. You should then use .catch() to handle the error.",
								"To reject a promise from the executor function, you should just call reject() with an error object.",
								"You can reject a promise with any value, not just an error object.",
								"However, many libraries and frameworks assume that promises are always rejected with an error. So you should be careful if you choose to call Promise.reject() with a value that isn't an error."
							],
							"rank": 3.1
						},
						{
							"url": "https://stackoverflow.com/questions/33445415/javascript-promises-reject-vs-throw",
							"notes": [
								"One downside to throw is that it wouldn't result in a rejected promise if it was thrown from within an asynchronous callback, such as a setTimeout.",
								"Any time you are inside of a promise callback, you can use throw. However, if you're in any other asynchronous callback, you must use reject.",
								"**A function is hard to use when it sometimes returns a promise and sometimes throws an exception. When writing an async function, prefer to signal failure by returning a rejected promise**"
							],
							"rank": 3.9
						},
						{
							"title": "Promise.prototype.catch()",
							"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",
							"notes": [
								"The catch() method returns a Promise and deals with rejected cases only.",
								"**The catch() method behaves the same as calling Promise.prototype.then(undefined, onRejected) (in fact, calling obj.catch(onRejected) internally calls obj.then(undefined, onRejected)).**"
							]
						},
						{
							"title": "JavaScript Promise in 100 Seconds",
							"url": "https://www.youtube.com/watch?v=RvYYCGs45L4",
							"time": "01:38",
							"notes": [
								"Promise parameter is called the executor",
								"then() and catch() return promises so they can be chained"
							],
							"rank": 4.5
						},
						{
							"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled",
							"notes": [
								"allSettled() returns a promise that resolves after all of the given promises have either fulfilled or rejected",
								"is typically used when you have multiple asynchronous tasks that are not dependent on one another to complete successfully",
								"the Promise returned by Promise.all() may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting"
							]
						},
						{
							"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"
						}
					],
					"flashcards": [
						{
							"front": "What is a JavaScript Promise?",
							"back": "an object that represents the eventual completion or failure of an asynchronous operation and its resulting value",
							"moreInfo": [
								{
									"title": "MDN: Promise",
									"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
								}
							]
						},
						{
							"front": "What are the three possible states of a JavaScript Promise?",
							"back": "- fulfilled\r\n- rejected\r\n- pending",
							"moreInfo": [
								{
									"title": "What are promises in JavaScript?",
									"url": "https://www.educative.io/edpresso/what-are-promises-in-javascript"
								}
							]
						},
						{
							"front": "What is callback hell?",
							"back": "- when you have numerous callbacks and each callback takes an argument that is a result of a previous callbacks\r\n- in this manner, the code structure looks like a pyramid making it difficult to read and maintain",
							"moreInfo": [
								{
									"title": "Stack Overflow: \"In the below code, am I in callback hell?\" / \"Yes, you are in callback hell.\"",
									"url": "https://stackoverflow.com/questions/18095107/callback-hell-in-nodejs"
								}
							]
						},
						{
							"front": "What are three ways to avoid callback hell?",
							"back": "- break large functions with numerous nested callbacks into smaller functions to reduce the amount of nested code \r\n- use Promises with `.then()` syntax\r\n- use Promises with `async\/await` syntax",
							"moreInfo": [
								{
									"title": "How to deal with nested callbacks and avoid callback hell",
									"url": "https://www.freecodecamp.org/news/how-to-deal-with-nested-callbacks-and-avoid-callback-hell-1bc8dc4a2012/"
								}
							]
						},
						{
							"front": "Are promises uses for synchronous or asynchronous operations?",
							"back": "asynchronous"
						},
						{
							"front": "Does it make sense to use try/catch blocks in a promise?",
							"back": "No, `try/catch` is redundant in promise chains and promise executor functions.  Any error thrown is automatically converted to a rejection of the promise you're supposed to return.",
							"moreInfo": [
								{
									"title": "Stack Overflow: Cleancode: try/catch in Promise",
									"url": "https://stackoverflow.com/questions/41533993/cleancode-try-catch-in-promise"
								}
							]
						},
						{
							"front": "What is the difference between the HTTP methods POST and GET?",
							"back": "- GET is used to request data from a specified resource\r\n- POST is used to send data to a server to create\/update a resource"
						},
						{
							"front": "What is CORS?",
							"back": "- Cross-Origin Resource Sharing\r\n- a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served",
							"moreInfo": [
								{
									"title": "Wikipedia: Cross-origin resource sharing",
									"url": "https://en.wikipedia.org/wiki/Cross-origin_resource_sharing"
								}
							]
						}
					],
					"days": [
						{
							"date": "2021-08-25",
							"title": "JSON Basics",
							"videos": [
								{
									"description": "2021-08-25-livecoding-jobsite",
									"url": "https://drive.google.com/file/d/1AmJouMpmWAAMPcZ27ZIDZ3GKj4hzlkNk"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "JSON Parsing Basics",
									"topics": [
										{
											"title": "JSON.parse()",
											"url": "https://www.w3schools.com/js/js_json_parse.asp"
										},
										{
											"title": "JSON.stringify()",
											"url": "https://www.w3schools.com/js/js_json_stringify.asp"
										},
										{
											"title": "Make sure JSON is correctly formatted",
											"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse"
										}
									]
								},
								{
									"kind": "liveCoding",
									"title": "Create a job application tracking website that uses a JavaScript object literal as content exported as JSON",
									"topics": [
										{
											"title": "create `data.js` file that exports a JavaScript object of job ads as JSON"
										},
										{
											"title": "create a site that reads and displays the data in the console.log()"
										},
										{
											"title": "use the data from the data file to create web content"
										},
										{
											"title": "make a search box which finds results as you type and highlights found text"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Baking Box",
									"when": "After JSON",
									"time": "~1hr-1.5hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-JSON/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-JSON/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-432-SPA-ASY-Browser-fetch-JSON",
									"description": "Use JavaScript to read contents of JSON file and based on the data, display elements on the page",
									"rawTopics": "\"JSON: \"\"JSON is JS Objects in text\"\"\r\n- Converting objects to JSON: `JSON.stringify(<object>)`\r\n- Parsing JSON objects: `JSON.parse(<JSON string>)`\r\n- JSON pitfalls: strict notation, `JSON.parse()` causes runtime errors\"\r\n",
									"topics": [
										{
											"title": "insertAdjacentHTML()",
											"url": "https://www.w3schools.com/jsref/met_node_insertadjacenthtml.asp"
										}
									],
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "Degi100, Suha995, Consciously, deyuhub"
									},
									"released": true,
									"cancelled": false
								}
							]
						},
						{
							"date": "2021-08-26",
							"title": "Promises and Async/Await I",
							"videos": [
								{
									"description": "2021-08-26 Explanation async/await",
									"url": "https://drive.google.com/file/d/1EOuHa0e86qHL2NzTYc5z-DZw02EN1yug"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "Callbacks --> Promises --> async/await",
									"topics": [
										{
											"title": "Promises",
											"url": "https://www.w3schools.com/js/js_promise.asp"
										},
										{
											"title": "async/await",
											"url": "https://www.w3schools.com/js/js_async.asp"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Promise me a modal",
									"when": "After Non-Blocking Promises",
									"time": "~1hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-fetch-promises/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-promises/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-433-SPA-ASY-Browser-fetch-promises",
									"description": "In a Webpack website, using promise and timeout, make a modal window pop up after user is on page for 60 seconds",
									"rawTopics": "Introduction: The request response cycle - Client perspective\r\n\"Non-Blocking Promises:\r\n- Blocking vs. Non-Blocking code: A brief example, `window.setTimeout()`\r\n- Race conditions: Reading non blocking code\r\n- Promises:\r\n`new Promise(<function>)`, `Promise.resolve()`, `Promise.then()`\r\n- Promisifying: Converting `setTimeout()` to a promise\r\n- Breaking Promises:\r\n`Promise.reject()`, `Promise.catch()`, `Promise.finally()`\"\r\n",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "Suha995, Consciously, deyuhub"
									},
									"topics": [
										{
											"title": "&__content",
											"url": "https://www.studytonight.com/sass/sass-parent-selector-using-ampersand"
										},
										{
											"title": "Promises",
											"url": "https://www.w3schools.com/js/js_promise.asp"
										},
										{
											"title": "setTimeout",
											"url": "https://www.w3schools.com/jsref/met_win_settimeout.asp"
										}
									],
									"released": true,
									"cancelled": false
								}
							]
						},
						{
							"date": "2021-08-30",
							"title": "Promises and Async/Await II",
							"videos": [
								{
									"description": "2021-08-30-livecode-setTimeOut-to-Promise-classic-to-Promise-asyncawait-to-IIFE",
									"url": "https://drive.google.com/file/d/1O724gbdA7CdmzmsCX58QB75Uz8kGM6K_"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"title": "From setTimeOut to Promise-classic to Promise-async/await to IIFE",
									"topics": [
										{
											"title": "Create a simple HTML/CSS/JavaScript website that shows a message after 3 seconds with setTimeout()"
										},
										{
											"title": "Wrap the setTimeout in a Promise and consume the promise with classic promise syntax"
										},
										{
											"title": "Convert the classic promise syntax to async/await"
										},
										{
											"title": "Convert the async/await syntax into an IIFE"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Async/Await",
									"when": "After Simplifying Asynchronous Code",
									"time": "~45mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-async/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-async/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-434-SPA-ASY-Browser-fetch-async",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10",
										"unfinished": "Heba-Dughmosh, Suha995, deyuhub, gamzeumac"
									},
									"description": "In a Webpack website, create a promise that executes code when the button's animation ends",
									"rawTopics": "\"Debug:\r\n- Debugging node scripts with chrome: `node inspect <filename>`\r\n- The `debugger;` statement\r\n- Keeping track of state: inspecting scopes in chrome\"\r\n\"Runtime errors:\r\n- Catching errors: `try { ... } catch (e) { ... }`\r\n- Throwing runtime errors: `throw <expression>;`\r\n- The error object (brief intro): `new Error(<message>);`\"\r\n\"Blocking parsing and rendering:\r\n- Usage of script elemnet attributes async and defer for increasing speed and performance\r\n- The domInteractive event\r\n- Dynamic scripts injection\"\r\n\"Simplifying Asynchronous Code:\r\n- Why use promises: callback hell, pyramid of doom\r\n- Problems with promises: scoping issues, endless chain\r\n- Using promises modernly:\r\n`async` functions, `await` keyword,\r\n\"\"Async functions always return a promise\"\"\"\r\n",
									"topics": [
										{
											"title": "async/await",
											"url": "https://www.w3schools.com/js/js_async.asp"
										},
										{
											"title": "animationend Event",
											"url": "https://www.w3schools.com/jsref/event_animationend.asp"
										}
									],
									"released": true,
									"cancelled": false
								}
							]
						},
						{
							"date": "2021-08-31",
							"title": "Using APIs with Fetch",
							"videos": [
								{
									"description": "2021-08-31 Live-Coding API - Cryptocurriences",
									"url": "https://drive.google.com/file/d/1xrdMqMvp8qofQ-dW3YYB9Vj3sVX0-jwD"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "Tools for fetching and displaying data from APIs",
									"topics": [
										{
											"title": "fetch()",
											"url": "https://www.javascripttutorial.net/javascript-fetch-api"
										},
										{
											"title": "async/await",
											"url": "https://www.w3schools.com/js/js_async.asp"
										},
										{
											"title": "toFixed()",
											"url": "https://www.w3schools.com/jsref/jsref_tofixed.asp"
										},
										{
											"title": "parseFloat()",
											"url": "https://www.w3schools.com/jsref/jsref_parsefloat.asp"
										},
										{
											"title": "Intl.NumberFormat()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat"
										},
										{
											"title": "[FontAwesome](https://onespace.netlify.app/howtos?id=372) spinning wait icon: `<i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i>`"
										},
										{
											"title": "IIFE",
											"url": "https://flaviocopes.com/javascript-iife"
										}
									]
								},
								{
									"kind": "liveCoding",
									"image": "bitcoinLiveCoding",
									"title": "Create website that lists current crypto-currency rates",
									"topics": [
										{
											"title": "read how the [API](https://www.cryptonator.com/api) works"
										},
										{
											"title": "test API in browser or Postman"
										},
										{
											"title": "display data to browser with IIFE: *Bitcoin is currently worth ... euros.*"
										},
										{
											"title": "add a spinner icon and test"
										},
										{
											"title": "add conversion sentence with dollars"
										},
										{
											"title": "convert IIFE to `getPrice(currency)` function"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Currency converter",
									"when": "After Getting Data (JavaScript Classes)",
									"time": "3hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-Currency/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-Currency/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-435-SPA-ASY-Browser-Currency",
									"description": "Create a simple HTML/JavaScript site that accesses an online API to compute crypto-currency exchange rates",
									"rawTopics": "\"Getting data: Fetch examples\r\n- 3rd Party APIs:\r\nbrief introduction, why should making requests be asynchronous\r\n- Getting info: `window.fetch(<url>)`, the response object overview\r\n- Parsing JSON: `response.json()`\r\n- Using data: `fetch(<url>).then(<callback>)` vs. `await fetch(<url>)`\"\r\n",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, NikoHamburg, Pierluigi10",
										"unfinished": "deyuhub, Fatihce57, gamzeumac"
									},
									"topics": [],
									"released": true,
									"cancelled": false
								},
								{
									"kind": "exercise",
									"title": "GitHub Username API",
									"when": "After Getting Data (JavaScript Classes)",
									"time": "3hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/Browser-Github-UserName-API/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-Github-UserName-API/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-436-SPA-ASY-Browser-Github-UserName-API",
									"description": "Create a HTML/CSS/JavaScript website that enables you to lookup projects on GitHub",
									"rawTopics": "",
									"status": {
										"finished": "reidfleites, osama274, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Consciously, Saeideh-Fasih, Pierluigi10",
										"unfinished": "heavypete, Suha995, herrbaha, deyuhub, Fatihce57, NikoHamburg, gamzeumac"
									},
									"topics": [
										{
											"title": "GitHub API",
											"url": "https://api.github.com"
										},
										{
											"title": "Object.assign()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"
										},
										{
											"title": "fetch()",
											"url": "https://www.w3schools.com/js/js_api_fetch.asp"
										},
										{
											"title": "callback",
											"url": "https://www.w3schools.com/js/js_callback.asp"
										},
										{
											"title": "encodeURIComponent()",
											"url": "https://www.w3schools.com/jsref/jsref_encodeuricomponent.asp"
										}
									],
									"released": true,
									"cancelled": false
								}
							]
						},
						{
							"date": "2021-09-01",
							"title": "GET/POST and Local Storage",
							"videos": [
								{
									"description": "Wie man Übung 438 von einer Webpack-Site in einer HTML/CSS/JS-Site umwandelt.",
									"url": "https://drive.google.com/file/d/1smXMKYKxbedtQSStn7bAWdULWoBMANrN"
								},
								{
									"description": "Live-Coding JSONPlaceholder",
									"url": "https://drive.google.com/file/d/13ZjoZ4BhnTyxIHVKpWy6VaWqP6aW3ll6"
								},
								{
									"description": "LocalStorage Explanation and review of Exercise 438",
									"url": "https://drive.google.com/file/d/1aORHfXTgLIFKYzOpvRJ9j2PUwE2xjeiO"
								},
								{
									"description": "Review of exercise 437 and Frontend-to-Backend example of form posting",
									"url": "https://drive.google.com/file/d/14bGFit1Kp0pf4JD-LGKCKv-J8tjvCZfY"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"image": "lcJsonPlaceholder",
									"title": "Create website that retrieves and displays data from JSONPlaceholder",
									"topics": [
										{
											"title": "set up basic HTML/CSS/JS site"
										},
										{
											"title": "create UL placeholder on HTML page"
										},
										{
											"title": "read data from JSONPlaceholder API e.g. https://jsonplaceholder.typicode.com/users"
										},
										{
											"title": "populate the UL with LI tags and the data from the API"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Submit Me",
									"when": "After Posting Data",
									"time": "~1hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-post/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-post/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-437-SPA-ASY-Browser-fetch-post",
									"description": "Edit Webpack site to post data from form to API via fetch",
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"rawTopics": "\"Posting data: JSONPlaceholder examples\r\n- HTTP Methods repeat: GET vs. POST\r\n- Sending data with Fetch: `fetch(<url>, <options>)`, the `method` option\r\n- Parsing the body: the `body` option in fetch\r\n- Sending forms with JS: creating a post request on submit\"\r\n",
									"topics": [
										{
											"title": "JSONPlaceholder",
											"url": "https://jsonplaceholder.typicode.com"
										},
										{
											"title": "fetch()",
											"url": "https://www.w3schools.com/js/js_api_fetch.asp"
										},
										{
											"title": "HTTP Request Methods: GET/POST",
											"url": "https://www.w3schools.com/tags/ref_httpmethods.asp"
										}
									],
									"released": true,
									"cancelled": false
								},
								{
									"kind": "exercise",
									"title": "Movie List",
									"when": "After Saving Data",
									"time": "~1.5-2hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-saving/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-saving/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-438-SPA-ASY-Browser-fetch-saving",
									"rank": 4.8,
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"description": "Add code to Webpack site so that it allows user to search for movie title, gets information about the movie via an API, and then saves this data in localStorage",
									"rawTopics": "\"Cross Origin Requests:\r\n- Making requests to other domains: The same origin policy\r\n- CORS: Cross Origin Resource Sharing, Accepted CORS headers\r\n- Adding CORS headers to request:\r\nthe fetch `headers` option, the `Origin` header\r\n- Working around CORS: Using a proxy script for development, `cors-anywhere`\"\r\n\"Saving Data: Use Cases for saving data in the browser\r\n- Methods of saving data to the browser: `localStorage` vs. `sessionStorage`\r\n- Setting data: Key value pairs, `Storage.setItem(<key>, <value>)`\r\n- Getting data: `Storage.getItem(<key>)`\r\n- Avoiding errors: Creating a promise wrapper for localStorage\"\r\n",
									"topics": [
										{
											"title": "localStorage",
											"url": "https://www.w3schools.com/jsref/prop_win_localstorage.asp"
										},
										{
											"title": "async/await",
											"url": "https://www.w3schools.com/js/js_async.asp"
										},
										{
											"title": "fetch()",
											"url": "https://www.w3schools.com/js/js_api_fetch.asp"
										}
									],
									"released": true,
									"cancelled": false
								}
							]
						},
						{
							"date": "2021-09-02",
							"title": "setInterval() / clearInterval()",
							"videos": [
								{
									"description": "Live-Coding setInterval/clearInterval",
									"url": "https://drive.google.com/file/d/1cmkz5zBl9pWBjxGp86QYFCAIaYVaKyWK"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"image": "lvcSetInterval",
									"title": "setInterval/clearInterval: Fetch data from an API only every two seconds",
									"topics": [
										{
											"title": "create an input box for search text and an output element for displaying results"
										},
										{
											"title": "make a function `fetchFromApi()` and attach it to the `keyup` event on the input box so the output area shows the text everytime the user types something"
										},
										{
											"title": "problem: it fetches the API too often"
										},
										{
											"title": "solution: make a setInterval called `checkSearchText` which fetchs the API every 2 seconds, but only if the search text has changed"
										},
										{
											"title": "also make a button that removes the fetching functionality (with `clearInterval`)"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Bonus: Pomodoro Timer",
									"when": "After fetch module",
									"time": "~1.5hrs-2hrs",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": "https://github.com/DigitalCareerInstitute/Browser-fetch-setInterval/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/Browser-fetch-setInterval/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-439-SPA-ASY-Browser-fetch-setInterval",
									"description": "Edit Webpack site to give a pomodoro clock functionality using setInterval() and clearInterval()",
									"rawTopics": "",
									"topics": [
										{
											"title": "setInterval()",
											"url": "https://www.w3schools.com/jsref/met_win_setinterval.asp"
										},
										{
											"title": "clearInterval()",
											"url": "https://www.w3schools.com/jsref/met_win_clearinterval.asp"
										}
									],
									"status": {
										"finished": "",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac"
									},
									"released": true,
									"cancelled": false
								}
							]
						}
					]
				},
				{
					"title": "4.04 Boilerplate",
					"abbreviation": "BOI",
					"totalDays": 1,
					"overview": "Creating a fully operational client side application always begins with some common code structure. In this submodule, you will bootstrap your first single-page application based on the React framework.",
					"objectives": [
						"Define and explain the uses of a Single-Page Application",
						"Explain the MVC acronym with emphasis on a Single Page Application as the View layer",
						"Understand key features of React and at its ecosystem",
						"Use create-react-app to quickly create a React application project",
						"Use React Developer Tools to inspect a simple React application"
					],
					"resources": [
						{
							"url": "https://stackoverflow.com/questions/34641582/what-is-the-difference-between-react-native-and-react"
						},
						{
							"title": "React 18: An Introduction To The Latest Version",
							"url": "https://techblog.geekyants.com/react-18-an-introduction-to-the-latest-version"
						},
						{
							"title": "React Tutorial",
							"url": "https://www.w3schools.com/REACT/DEFAULT.ASP",
							"notes": [
								"React is so useful because the most effient way to build complex applications is with reusable components and that is where React excels",
								"Angular builds full, single-page applications, React builds user interfaces",
								"React is the V in MVC"
							]
						},
						{
							"title": "What is a Single Page Application? Pros and Cons of the Technology",
							"url": "https://huspi.com/blog-open/definitive-guide-to-spa-why-do-we-need-single-page-applications/",
							"notes": [
								"an app that doesn’t need to reload the page during its use and works within a browser",
								"most apps today are SPAs: Facebook, Google Maps, Gmail, Twitter, Google Drive, GitHub",
								"advantages are speed and component-based architecture",
								"the main disadvantages is poor SEO",
								"SPAs are very good for sites where users have to log in, i.e. apps",
								"SPAs are not very good for blogs or product sites which need to be found by search engines"
							]
						},
						{
							"url": "https://www.mindbowser.com/best-javascript-frameworks/",
							"notes": [
								"React: fast, component-based, create-react-app excellent, large community, excels as the V in MVC, steep learning curve",
								"Vue.js: light-weight, small-footprint, powerful and easy to learn, but not as popular as React for large projects",
								"Angular: enterprise-level, massive, responsible not only for View in MVC (as React and View) but for whole single-page-application, everything out of the box, uses TypeScript by default, steep learning curve"
							]
						},
						{
							"url": "https://bitsofco.de/understanding-the-virtual-dom/",
							"notes": [
								"A virtual DOM can be thought of as a copy of the original DOM. This copy can be frequently manipulated and updated, without using the DOM APIs. Once all the updates have been made to the virtual DOM, we can look at what specific changes need to be made to the original DOM and make them in a targeted and optimized way."
							]
						},
						{
							"url": "https://reactjs.org/docs/create-a-new-react-app.html",
							"notes": [
								"create-react-app doesn't handle backend logic or databases, it just creates a frontend, so you can use it with any backend you want",
								"under the hood, create-react-app uses Babel and Webpack, but you don't need to know anything about them"
							]
						},
						{
							"url": "https://www.youtube.com/watch?v=Tn6-PIqc4UM",
							"title": "React in 100 Seconds",
							"notes": [
								"a library for building user interfaces",
								"developed in 2013 by Facebook",
								"the beautify of React is that simplicity of building a component has been brought down to its theoretical minimum, it's just a JavaScript function",
								"JSX allows you to easily bind JavaScript with HTML",
								"React is well-named because it reacts to state to update the user-interface",
								"React has a massive ecosystem that surrounds it",
								"React itself doesn't care about routing, state management, animation, instead, it allows those concerns to evolve naturally in the opensource community",
								"React Native allows you to leverage your skills for mobile apps",
								"knowing this library is one of the most in-demand skills of frontend developers today"
							]
						},
						{
							"title": "The Key Concepts You Need to Understand About React",
							"url": "https://levelup.gitconnected.com/new-to-react-you-need-to-understand-these-key-concepts-before-anything-else-2247efc1eaac",
							"notes": []
						},
						{
							"title": "Introducing JSX",
							"url": "https://reactjs.org/docs/introducing-jsx.html",
							"notes": [
								"JSX is a syntax extension to JavaScript",
								"rendering logic is inherently coupled with other UI logic",
								"Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with loosely coupled units called “components” that contain both."
							]
						},
						{
							"title": "ReactJS Tutorial: JSX",
							"url": "https://www.youtube.com/watch?v=7fPXI_MnBOY",
							"time": "11:24",
							"notes": []
						},
						{
							"title": "Create React App without create-react-app",
							"url": "https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-2lgd",
							"notes": []
						},
						{
							"title": "Creating your React project from scratch without create-react-app",
							"url": "https://dev.to/underscorecode/creating-your-react-project-from-scratch-without-create-react-app-the-complete-guide-4kbc",
							"notes": []
						},
						{
							"title": "Create React App using Parcel, without create-react-app",
							"url": "https://www.educative.io/edpresso/how-to-create-a-react-app-without-using-create-react-app-cli",
							"notes": []
						},
						{
							"title": "How React works under the hood",
							"url": "https://www.freecodecamp.org/news/react-under-the-hood/",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "uuu",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "uuu",
							"notes": []
						}
					],
					"flashcards": [
						{
							"front": "Why is React technically a library and not a framework?",
							"back": "Because React does not have everything you need to make a complete application, as does Angular, for instance. React is merely a unopinionated, frontend library which has a rich collection of tools you can choose from to create complete applications.",
							"moreInfo": [
								{
									"title": "Is React a Library or a Framework? Here's Why it Matters",
									"url": "https://www.freecodecamp.org/news/is-react-a-library-or-a-framework"
								}
							]
						},
						{
							"front": "Name three central features of React.",
							"back": "- it uses the virtual DOM\r\n- it follows uni-directional data flow (sends data from parent to child components)\r\n- it used for building user interfaces or UI components",
							"moreInfo": [
								{
									"title": "Unidirectional Data Flow in React",
									"url": "https://flaviocopes.com/react-unidirectional-data-flow/"
								}
							]
						},
						{
							"front": "Name 8 characteristics of JSX.",
							"back": "- JSX is a syntax extension to JavaScript used with React\r\n- JSX is a way of combining JavaScript and HTML\r\n- JSX is an XML-like syntax extension to JavaScript, it's not intended to be implemented by engines or browsers, it's intended to be used to transform tokens into standard JavaScript\r\n- browsers cannot read JSX because there is no inherent implementation for the browser engines to read and understand it\r\n- JSX is optional and not required to use React\r\n- using React without JSX is especially convenient when you don't want to set up compilation in your build environment\r\n- each JSX element is just syntactic sugar for calling React.createElement(component, props, ...children)\r\n- anything you can do with JSX can also be done with just plain JavaScript"
						}
					],
					"days": [
						{
							"date": "2021-09-06",
							"title": "React Basics and create-react-app",
							"bulkTopics": "Introduction: What is a Single Page Application? Why do we need it?\r\n\"Framework:\r\n- MVC Concepts: V is for View (Brief Definition)\r\n- Framework obsession: Overview of the JS Framework landscape\r\n- React intro: Why react? React vs. Web Component Standard\r\n- React Ecosystem: React, Native, Expo Framework, Gatsby, Nextjs\r\n- Modern React Development with Hooks\"\r\n\"Quickstart with Create React App:\r\n- Starting a react project: `npx create-react-app <app name>`\r\n- What's in the box: Reviewing package.json\r\n- Project structure: `src` vs. `public` folders, the `build` folder\r\n- Render in React: `index.js`\r\n- Including styles: `import <path to css>`\"\r\n\"Component Anatomy: Dissecting `App.js`\r\n- Entry Point: `App.js`, the boilerplate `App` component\r\n- Importing images: `import <image name> from <path to image>`\r\n- Using images: `<img src={imageName} alt=\"\"...\"\" \/>`\"\r\nDebugging React with \"React Developer Tools\"\r\n\"Templating with JSX: Slightly different html\r\n- Multi-line templates: `const <component name> = () => (<JSX>)`\r\n- One element per component: `React.Fragment` for multiple html tags\r\n- Put the JS in JSX: Using `{}` for JS expression interpolation\r\n- Comments in JSX\r\n- Conditional rendering\r\n- Generating lists with Array map, the `key` property\"",
							"videos": [
								{
									"description": "2021-09-06-explanation-what-is-react",
									"url": "https://drive.google.com/file/d/1qZEfhfTqVnVsPePfw2JgDv_wwwGG-Ivv"
								},
								{
									"description": "2021-09-06-explanation-singlePage-mvc-javascriptFrameworks",
									"url": "https://drive.google.com/file/d/1-7oWt012fQegFHAGzkL8YVJkz2xTd18V"
								},
								{
									"description": "2021-09-06-liveCoding-createReactSiteWithParcel",
									"url": "https://drive.google.com/file/d/11qolnp5GtFmSi8Zsly4HwO6B5viTPz5y"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "TODO APP - Set up && Hello world",
									"when": "End of Boilerplate.",
									"time": "60 minutes.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/01-hello-world",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/01-hello-world",
									"url": "nnn",
									"description": "exercise is missing (404)",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Unclear what the purpose of the exercise is or how one would use it. Solution link exists but exercise link is a 404."
								},
								{
									"kind": "exercise",
									"title": "JSX",
									"when": "End of Boilerplate.",
									"time": "30 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-boilerplate-JSX",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-boilerplate-JSX/tree/solution",
									"url": "nnn",
									"description": "variables: `let output = <span> James is { age } years old </span>`",
									"rawTopics": "Preparation:\r\n\r\nClone the repository into your class' GitHub organization.\r\n\r\nYour students should fork the repo and then upload the solution to their own repository or branch.\r\n",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution doesn't work: \"Error: Target container is not a DOM element.\""
								},
								{
									"kind": "exercise",
									"title": "Rendering Dynamic Data",
									"when": "End of Boilerplate.",
									"time": "30 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-boilerplate-rendering-dynamic-data",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-boilerplate-rendering-dynamic-data/tree/solution",
									"url": "nnn",
									"description": "Rendering from objects, e.g. customer Bob Dylan",
									"rawTopics": "Preparation:\r\n\r\nClone the repository into your class' GitHub organization.\r\n\r\nYour students should fork the repo and then upload the solution to their own repository or branch.\r\n",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution doesn't work: \"Error: Target container is not a DOM element.\""
								},
								{
									"kind": "exercise",
									"title": "Create Layout",
									"when": "End of Boilerplate.",
									"time": "45 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-boilerplate-building-layout",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-boilerplate-building-layout/tree/solution",
									"url": "nnn",
									"description": "Creates a Bootstrap display card about Bob Dylan",
									"rawTopics": "Preparation:\r\n\r\nClone the repository into your class' GitHub organization.\r\n\r\nYour students should fork the repo and then upload the solution to their own repository or branch.\r\n",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution works, displays an HTML card with photo of Bob Dylan, etc. but this is either a non-create-react-app site or a much older version (React 16.12.0) that is already built and is just an exercise with JSX. I will instead have an exercise where one builds a site without create-react-app to demonstrate how this is done, then practice basic JSX in a modern create-react-app environment where one usually uses JSX."
								},
								{
									"kind": "exercise",
									"title": "Render Array Data",
									"when": "End of Boilerplate.",
									"time": "1 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-boilerplate-create-layout-using-arraydata",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-boilerplate-create-layout-using-arraydata/tree/solution",
									"url": "nnn",
									"description": "Creates a UL/LI list from an array of HTML elements",
									"rawTopics": "Preparation:\r\n\r\nClone the repository into your class' GitHub organization.\r\n\r\nYour students should fork the repo and then upload the solution to their own repository or branch.\r\n",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution works, displays a list of LI elements in an array which is added to content variable that has a UL element in it, but this is either a non-create-react-app site or a much older version (React 16.12.0) that is already built and is just an exercise with JSX. I will instead have an exercise where one builds a site without create-react-app to demonstrate how this is done, then practice basic JSX in a modern create-react-app environment where one usually uses JSX."
								},
								{
									"kind": "exercise",
									"title": "Render Nested Data in Array",
									"when": "End of Boilerplate.",
									"time": "1 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-boilerplate-mapping-array-objects",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-boilerplate-mapping-array-objects/tree/solution",
									"url": "nnn",
									"description": "Displays another collection of HTML elements",
									"rawTopics": "Preparation:\r\n\r\nClone the repository into your class' GitHub organization.\r\n\r\nYour students should fork the repo and then upload the solution to their own repository or branch.\r\n",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution works, displays a list of LI elements in an array that were created with map(), which are then added to content variable that has a UL element in it, but this is either a non-create-react-app site or a much older version (React 16.12.0) that is already built and is just an exercise with JSX. I will instead have an exercise where one builds a site without create-react-app to demonstrate how this is done, then practice basic JSX in a modern create-react-app environment where one usually uses JSX."
								},
								{
									"kind": "explanation",
									"title": "What is React?",
									"outline": "- a JavaScript **library for creating user interfaces**\r\n- developed in **2013** by Facebook\r\n- **component-based**\r\n\t- it has turned out that complex websites are made up of components \r\n\t\t- React's design is centered on component building and management\r\n\t- easily manage components in components in components\r\n\t- components are reusable\r\n\t- the beautify of React is that simplicity of building a component has been brought down to its theoretical minimum, it's just a JavaScript function\r\n- has a **declarative** instead of an imperative architecture\r\n\t- you don't have to tell every component what to do, as with jQuery\r\n\t- React reacts to that state appropriately based on how you declared it to react to it\r\n- **JSX** \r\n\t- allows you to easily bind JavaScript with HTML\r\n- **massive ecosystem**\r\n\t- the most popular framework, the most tools and largest community \r\n- versions\r\n\t- **2013-2017**\r\n\t\t- `var CodeExercises = React.createClass({`\r\n\t- 2016: Version 15.0.0\r\n\t- **2017: Version 16.0.0**\r\n\t\t- `class CodeExercises extends Component {`\r\n\t- 2017: Version 16.3.0\r\n\t- **2019-02: Version 16.8 (hooks)**\r\n\t\t- `function CodeExercises() {`\r\n\t- 2020-02: Version 16.13\r\n\t- 2020-10: Version 17\r\n- it is the V in MVC\r\n\t- React itself doesn't care about routing, state management, animation, instead, it allows those concerns to evolve naturally in the open-source community\r\n- React Native \r\n\t- allows you to leverage your skills for mobile apps,\r\n- Virtual DOM\r\n\t- \"A virtual DOM can be thought of as a copy of the original DOM. This copy can be frequently manipulated and updated, without using the DOM APIs. Once all the updates have been made to the virtual DOM, we can look at what specific changes need to be made to the original DOM and make them in a targeted and optimized way.\"\r\n- many tools and extensions\r\n\t- VSCode support\r\n\t- React Developer Tools in Firefox and Chrome\r\n- **a good career choice**\r\n\t- knowing React is one of the most in-demand skills of frontend developers today\t\t\r\n- disadvantages\r\n\t- steep learning curve\r\n\t- constant and fast-paced evolution"
								},
								{
									"kind": "explanation",
									"title": "What is a Single Page Application?",
									"outline": "- was a response to the classic website\r\n\t- classic website: index.html has link that goes to reports.html, etc.\r\n- a SPA is a website that **has only one page**, and **doesn't need to reload the whole page**\r\n\t- it loads parts of the page that it needs to\r\n\t- this is component-based\r\n\t- most apps today are SPAs: Facebook, Google Maps, Gmail, Twitter, Google Drive, GitHub\r\n- advantages\r\n\t- **speed**\r\n\t\t- not always reloading each page\r\n\t- **component based**\r\n\t\t- updates each component, not the entire page\r\n- disadvantages\r\n\t- browser was made for classic websites (browser back button, bookmarking, etc.)\r\n\t\t- React-Router solves most of this\r\n\t- puts more load on the browser\r\n\t\t- be careful not to use too much memory\r\n\t\t\t- setInterval()\r\n\t- **SEO optimization issues**\r\n\t\t- SPAs best for sites that don't rely on SEO, e.g. where users log in (Gmail)\r\n\t\t- if you use React-Router, then build a sitemap to help search engines find your content\r\n\t\t- use server-side rendering\r\n"
								},
								{
									"kind": "explanation",
									"title": "The Basics of MVC",
									"outline": "- an [overview of MVC](https:\/\/onespace.netlify.app\/techItems?id=39)\r\n- MVC is a general pattern\r\n\t- what and where the Model, View and Controller are in each application is rarely clear-cut\r\n\t- MVC is a tool for understanding architecture of applications\r\n- React is generally the V in MVC\r\n- MVC in FbW-D01-Course (React)\r\n- MVC in Datapod (React)\r\n"
								},
								{
									"kind": "explanation",
									"title": "Overview of the JavaScript framework landscape",
									"outline": "- basically there are three, quick overview\r\n\t- 1. React: fast, component-based, create-react-app excellent, large community, excels as the V in MVC, steep learning curve\r\n\t- 2. Vue.js: light-weight, small-footprint, powerful and easy to learn, but not as popular as React for large projects\r\n\t- 3. Angular: enterprise-level, massive, responsible not only for View in MVC (as React and View) but for whole single-page-application, everything out of the box, uses TypeScript by default, steep learning curve\r\n- React\r\n\t- React is about building views (the V in MVC)\r\n\t\t- you could use Laravel as the backend (not desirable or possible with Angular)\r\n\t\t- can be extended to build single-page applications whereas Angular is designed to build single-page applications\r\n\t- state-based like React\r\n\t- pros\r\n\t\t- a robust reusable, component-based architecture for large websites\r\n\t\t- fast\r\n\t\t- create-react-app a wonderful tool\r\n\t - cons\r\n\t\t- steep learning curve\r\n\t\t- constant and fast-paced evolution\r\n- Vue.js\r\n\t- light-weight and easy to learn\r\n\t\t- lack of plumbing that React has\r\n\t- state-based like React\r\n\t- small footprint\r\n\t\t- can easily include a CDN in HEAD on a PHP or ASP.NET page and have a little Vue.js component that communicates with an API somewhere, etc.\r\n\t- if you try it, make sure you use 3.0 (November 2020) and not 2.0\r\n\t- cons\r\n\t\t- just not a popular as React\r\n- Angular\r\n\t- more than React or Vue.js\r\n\t- an enormous amount of features, everything out-of-the-box\r\n\t\t- enterprise-grade web application experience\r\n\t- enables you to build single-page applications\r\n\t\t- has a router\r\n\t\t- supports form validation\r\n\t\t- controls the complete user experience\r\n\t\t- handles everything\r\n\t- cons\r\n\t\t- heavy-weight\r\n\t\t- challenging for novices\r\n\t\t- uses TypeScript by default, powerful but complex\r\n- others\r\n\t- Svelte\r\n\t\t- created 2016 \r\n\t\t- different, worth looking at\r\n\t\t- \"Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.\"\r\n\t\t- generates code to manipulate the DOM\r\n\t\t- unlike Vue.js, you can't just include a script tag to load the framework\r\n\t- Meteor\r\n\t\t- Meteor modifies NodeJS and becomes your server\r\n\t\t- used for back-end development, management of the database, business logic and rendering of the front-end part of the websites are a major area where Meteor framework is used\r\n\t- Next JS\r\n\t\t- Based on React\r\n\t\t- offers good SEO performance due to SSR capability\r\n\t- Gatsby JS\r\n\t\t- static site generator tool\r\n\t\t- good for SEO"
								},
								{
									"kind": "liveCoding",
									"title": "Build a React Website without create-react-app, using Parcel",
									"topics": [
										{
											"title": "Create React App without create-react-app",
											"url": "https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-2lgd"
										},
										{
											"title": "Creating your React project from scratch without create-react-app",
											"url": "https://dev.to/underscorecode/creating-your-react-project-from-scratch-without-create-react-app-the-complete-guide-4kbc"
										},
										{
											"title": "Create React App using Parcel, without create-react-app",
											"url": "https://www.educative.io/edpresso/how-to-create-a-react-app-without-using-create-react-app-cli"
										},
										{
											"title": "demonstrate elements as variables, displaying variables in JSX, displaying object content in JSX"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Create Basic React Site without create-react-app",
									"description": "Use Parcel to set up a simple React site, then use JSX to make a simple React page.",
									"url": "https://github.com/FbW-D01/Exercise-440-SPA-BOI-createBasicReactSiteWithoutCreateReactApp",
									"released": true,
									"status": {
										"finished": "reidfleites, osama274, bakkar3, elis-11, Degi100, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10",
										"unfinished": "heavypete, Khambazarov, giacomotolari, deyuhub, gamzeumac"
									}
								},
								{
									"kind": "liveCoding",
									"title": "Build a React Website with create-react-app",
									"topics": [
										{
											"title": "use `npx create-react-app` to create a generic website"
										},
										{
											"title": "clean the generic website up so you have a blank website"
										},
										{
											"title": "display array of elements, display an array of strings"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Create Basic React Site with create-react-app",
									"description": "Use create-react-app to set up a simple React site, then use JSX to make a simple React page.",
									"url": "https://github.com/FbW-D01/Exercise-441-SPA-BOI-createBasicReactSiteWithCreateReactApp",
									"status": {
										"finished": "osama274, heavypete, bakkar3, elis-11, Degi100, giacomotolari, paulam92, Heba-Dughmosh, herrbaha, Fatihce57, NikoHamburg, Pierluigi10",
										"unfinished": "reidfleites, Khambazarov, Suha995, Consciously, Saeideh-Fasih, deyuhub, gamzeumac"
									},
									"released": true
								}
							]
						}
					]
				},
				{
					"title": "4.05 Components",
					"abbreviation": "COM",
					"totalDays": 9,
					"overview": "Understanding a user interface as a set of reusable components requires practice. In this sub module, you will gain first hand experience with creating components with state and behavior.",
					"objectives": [
						"Understand an application as a set of reusable components",
						"Understand the difference between JSX and HTML",
						"Use JSX to render components, generate lists, register event handlers and handle form data",
						"Data flow in a React component using props and state",
						"Compare between controlled components and uncontrolled components",
						"Style a component using Sass and styling component libraries",
						"Understand a single component’s lifecycle in a React application",
						"Executing code on lifecycle stages: first rendering, update, unmount",
						"Understand the Effect Hook to perform side effects in function components",
						"Identify common lifecycle pitfalls and workarounds"
					],
					"resources": [
						{
							"url": "https://www.freecodecamp.org/news/fetch-data-react/"
						},
						{
							"url": "https://www.freecodecamp.org/news/handling-state-in-react-four-immutable-approaches-to-consider-d1f5c00249d5/"
						},
						{
							"url": "https://www.youtube.com/watch?v=dpw9EHDh2bM",
							"title": "React Today and Tomorrow and 90% Cleaner React With Hooks",
							"time": "1:35:29"
						},
						{
							"url": "https://codeburst.io/declarative-vs-imperative-programming-a8a7c93d9ad2"
						},
						{
							"url": "https://reactjs.org/docs/hooks-reference.html"
						},
						{
							"url": "https://stackoverflow.com/questions/37755997/why-cant-i-directly-modify-a-components-state-really",
							"title": "Why can't I directly modify a component's state, really?"
						},
						{
							"url": "https://dev.to/horusgoul/use-react-s-usestate-and-usereducer-without-worrying-about-immutability-2a9k",
							"title": "Use React's useState and useReducer without Worrying about Immutability"
						},
						{
							"url": "https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/",
							"title": "useState in React: A complete guide"
						},
						{
							"url": "https://alexsidorenko.com/blog/react-update-nested-state/"
						},
						{
							"title": "Learn useReducer In 20 Minutes",
							"url": "https://www.youtube.com/watch?v=kK_Wqx3RnHk",
							"time": "20:11"
						},
						{
							"title": "useCallback and useRef: Two React Hooks You Should Learn",
							"url": "https://www.telerik.com/blogs/usecallback-useref-two-react-hooks-you-should-learn"
						},
						{
							"title": "5 Custom React Hooks You Need In Every Project",
							"url": "https://www.youtube.com/watch?v=0c6znExIqRw",
							"time": "11:25",
							"notes": [
								"useToggle() to toggle a value - nice!",
								"useTimeout() to start, reset timeout",
								"useDebounce() to e.g. send a query when a user stops typing for a second, doesn't run when page loads, users useTimeout()",
								"useUpdateEffect() to run only on update but not on page load",
								"useArray() to easily update arrays - nice!"
							]
						},
						{
							"title": "5 Custom React Hooks You Need In Every Project",
							"url": "https://www.youtube.com/watch?v=0c6znExIqRw",
							"time": "11:25"
						},
						{
							"title": "You don’t always need to import React",
							"url": "https://dev.to/dance2die/you-dont-always-need-to-import-react-3phn"
						},
						{
							"title": "This is why we need to bind event handlers in Class Components in React",
							"url": "https://www.freecodecamp.org/news/this-is-why-we-need-to-bind-event-handlers-in-class-components-in-react-f7ea1a6f93eb/"
						},
						{
							"url": "https://thoughtsandstuff.com/componentwillunmount-functional-components-react/",
							"notes": [
								"componentWillUnmount is the last function to be called immediately before the component is removed from the DOM. It is generally used to perform clean-up for any DOM-elements or timers created in componentWillMount"
							]
						},
						{
							"url": "https://blog.pusher.com/beginners-guide-react-component-lifecycle/",
							"notes": [
								"If you have a conditional to render the component then when the condition is false the component may get destroyed.",
								"in React, every Component follows a cycle from when it’s created and mounted on the DOM to when it is unmounted and destroyed",
								"lifecycle is broadly categorized into three parts: Mounting, Updating and Unmounting",
								"Mounting methods: constructor(), componentWillMount()--deprecated (use constructor), render(), componentDidMount()",
								"constructor will be called pre-render and componentDidMount post-render"
							]
						},
						{
							"title": "Handling Events",
							"url": "https://reactjs.org/docs/handling-events.html"
						},
						{
							"title": "nnn",
							"url": "https://www.w3schools.com/react/react_components.asp",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://reactjs.org/docs/components-and-props.html",
							"notes": []
						},
						{
							"title": "State and Lifecycle",
							"url": "https://reactjs.org/docs/state-and-lifecycle.html",
							"notes": [
								"clock example in index.js",
								"shows how to convert function component to class component",
								"The componentDidMount() method runs after the component output has been rendered to the DOM."
							]
						},
						{
							"title": "nnn",
							"url": "https://www.w3schools.com/react/react_events.asp",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://reactjs.org/docs/handling-events.html",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://reactjs.org/docs/render-props.html",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://www.w3schools.com/react/react_lifecycle.asp",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://programmingwithmosh.com/javascript/react-lifecycle-methods/",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://www.w3schools.com/REACT/DEFAULT.ASP",
							"notes": []
						},
						{
							"title": "ReactJS Tutorial: Components",
							"url": "https://www.youtube.com/watch?v=Y2hgEGPzTZY",
							"time": "4:58",
							"notes": []
						},
						{
							"title": "ReactJS Basics - #8 State of Components",
							"url": "https://www.youtube.com/watch?v=e5n9j9n83OM",
							"time": "5:26",
							"notes": []
						},
						{
							"title": "ReactJS Tutorial - 9 - Props",
							"url": "https://www.youtube.com/watch?v=m7OWXtbiXX8",
							"time": "11:36",
							"notes": []
						},
						{
							"title": "ReactJS Tutorial - 13 - Event Handling",
							"url": "https://www.youtube.com/watch?v=Znqv84xi8Vs",
							"time": "7:35",
							"notes": []
						},
						{
							"title": "ReactJS Basics - #14 Component Lifecycle",
							"url": "https://www.youtube.com/watch?v=Oioo0IdoEls",
							"time": "18:58",
							"rank": 4.8,
							"notes": []
						},
						{
							"title": "10 React Hooks Explained // Plus Build your own from Scratch",
							"url": "https://www.youtube.com/watch?v=TNhaISOUy6Q",
							"rank": 4.7,
							"time": "13:14",
							"notes": []
						},
						{
							"title": "nnn",
							"url": "https://www.youtube.com/watch?v=hQAHSlTtcmY&t=688s",
							"time": "27:15",
							"notes": []
						}
					],
					"flashcards": [
						{
							"front": "Name 8 characteristics of React components.",
							"back": "- components are like functions that return HTML elements\r\n- components are independent and reusable bits of code \r\n- there are two types of components: class components and function components\r\n- components let you split the UI into independent, reusable pieces, and think about each piece in isolation\r\n- in React, everything is a component\r\n- components render HTML\r\n- components are composed of other components\r\n- you can extract components into smaller components\r\n"
						},
						{
							"front": "Name 3 characteristics of props in React?",
							"back": "- props are arguments passed into React components\r\n- props stand for \"properties\"\r\n- React props are read-only, you will get an error if you try to change their value"
						},
						{
							"front": "Name 3 characteristics of state in React.",
							"back": "- state is similar to props but controlled by and private to the component\r\n- state stores property values that belong to the component\r\n- when state variables change, the component re-renders"
						},
						{
							"front": "Name the 3 categories of React component lifecycle.",
							"back": "- Mounting\r\n- Updating\r\n- Unmounting",
							"moreInfo": [
								{
									"title": "W3Schools: React Lifecycle",
									"url": "https://www.w3schools.com/react/react_lifecycle.asp"
								}
							]
						},
						{
							"front": "Name 3 characteristics of events in React?",
							"back": "- handling React events is similar to handling events on DOM elements\r\n- React events are named using camelCase\r\n- in JSX you pass a function as the evant handler, rather than a string"
						},
						{
							"front": "How are React elements different than DOM elements?",
							"back": "React elements are immutable, so once you create an element, you can’t change its children or attributes",
							"moreInfo": [
								{
									"title": "Stack Overflow: Updating the Rendered Element(immutable)",
									"url": "https://stackoverflow.com/questions/52460185/updating-the-rendered-elementimmutable"
								}
							]
						},
						{
							"front": "Name 2 characteristics of refs in React.",
							"back": "- short hand for references\r\n- attributes help store a reference to a particular React element or component",
							"moreInfo": [
								{
									"title": "ReactJS Refs",
									"url": "https://www.w3adda.com/react-js-tutorial/reactjs-refs"
								}
							]
						},
						{
							"front": "Name 4 characteristics of React forms.",
							"back": "- React forms are similar to HTML forms but work a little bit differently\r\n- a React form has default HTML form behavior so you have to alter how it is processed, i.e. you don't send the data anywhere with an `action` attribute when the submit button is clicked\r\n- instead:\r\n\t- form variables are saved in the state variables\r\n\t- you allow an event handler to process the state variables which have were already changed as the user filled out the form"
						},
						{
							"front": "Why was React Version 16.8 (February 2019) so significant?",
							"back": "it enabled React developers to use **hooks**"
						},
						{
							"front": "Name 3 examples of React hooks.",
							"back": "- `useState`\r\n\t- use state variables in the component\r\n- `useEffect`\r\n\t- lets you perform side effects in function components, e.g. data fetching, setting up a subscription, manually changing the DOM in React components\r\n\t- used in function comonents to replace the class component functionality of componentDidMount, componentDidUpdate, and componentWillUnmount\r\n- `useContext`\r\n\t- pass data through the component tree without having to pass props down manually at every level"
						},
						{
							"front": "Name 4 characteristics of hooks.",
							"back": "- you should call hooks at the top level, i.e. never inside loops, conditions, or nested functions\r\n- you can use as many hooks in a component as necessary\r\n- you can only call hooks from React function components, not class components\r\n- you can create custom hooks",
							"moreInfo": [
								{
									"title": "Reactjs: Using the Effect Hook",
									"url": "https://reactjs.org/docs/hooks-effect.html"
								}
							]
						},
						{
							"front": "What is the main reason to use the `useContext` hook?",
							"back": "the `useContext` hook provides a way to pass data through the component tree without having to pass props down manually at every level"
						}
					],
					"days": [
						{
							"date": "2021-09-07",
							"title": "Get to Know create-react-app",
							"videos": [
								{
									"description": "2021-09-07-liveCoding-minimize-create-react-app",
									"url": "https://drive.google.com/file/d/14vo1tgg7GsgjYjQTeoMRnTJcWEPW8fLE"
								},
								{
									"description": "2021-09-07-liveCoding-make-create-react-app-website-with-bootstrap-in-appjs",
									"url": "https://drive.google.com/file/d/1KOHmgH3KjWjpiBxhPjplfZNbmuFjiYLV"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"title": "Examine and minimize a create-react-app website",
									"topics": [
										{
											"title": "yarn.lock - if you need to keep exact snapshot of package versions"
										},
										{
											"title": "setupTests.js, App.test.js - used for Jest testing"
										},
										{
											"title": "reportWebVitals.js - if you want to measure performance of app"
										},
										{
											"title": "manifest.json - if you want to define icons, etc. on smart phones, favicons"
										},
										{
											"title": "robots.txt - defines rules for spiders, crawlers and scrapers for accessing your app"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "Reduce a create-react-app to its bare minimum",
									"description": "Create a React site with create-react-app then remove every file and all code that is not needed for a minimal, functioning site",
									"url": "https://github.com/FbW-D01/Exercise-442-SPA-COM-reduceACreateReactAppToItsBareMinimum",
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, Pierluigi10, gamzeumac",
										"unfinished": "deyuhub, NikoHamburg"
									},
									"released": true
								},
								{
									"kind": "exercise",
									"title": "First React Component",
									"when": "After Thinking in Components",
									"time": "15 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-first-component",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-first-component/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-443-SPA-COM-component-first-component",
									"description": "In the core ReactDOM.render line that connects React to the DOM, change the functional call to the component to a JSX element",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, Pierluigi10, gamzeumac",
										"unfinished": "reidfleites, deyuhub, NikoHamburg"
									},
									"released": true,
									"cancelled": false,
									"cancelledReason": ""
								},
								{
									"kind": "exercise",
									"title": "Render First Functional Component",
									"when": "After Thinking in Components",
									"time": "15 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-render-with-functions",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-render-with-functions/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This exercise was the same as the previous exercise, and the solution didn't solve what was asked (didn't change text from 'Hello World' to 'I love React'."
								},
								{
									"kind": "liveCoding",
									"title": "Make a simple React website with create-react-app that uses Bootstrap",
									"topics": [
										{
											"title": "Solution #1: Classic CDN in HEAD of HTML file",
											"url": "https://getbootstrap.com/docs/5.0/getting-started/introduction/"
										},
										{
											"title": "Solution# 2: npm import with import command in App.js",
											"url": "https://react-bootstrap.github.io/getting-started/introduction"
										},
										{
											"title": "Solution #3: Classic Bootstrap Card Example",
											"url": "https://getbootstrap.com/docs/5.0/components/card/"
										},
										{
											"title": "Solution #4: React-Bootstrap Card syntax",
											"url": "https://react-bootstrap.github.io/components/cards/"
										}
									]
								},
								{
									"kind": "exercise",
									"title": "A Real React Component",
									"when": "After Thinking in Components",
									"time": "30 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-real-component",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-real-component/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-444-SPA-COM-component-real-component",
									"description": "Create a function in the index.js file that serves as a component which displays content",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, Heba-Dughmosh, Consciously, herrbaha, deyuhub, Fatihce57, Pierluigi10",
										"unfinished": "paulam92, Suha995, Saeideh-Fasih, NikoHamburg, gamzeumac"
									},
									"released": true,
									"cancelled": false,
									"cancelledReason": ""
								}
							],
							"bulkTopics": "\"Introduction: Thinking in Components\r\n- Difference between Class & Functional component\""
						},
						{
							"date": "2021-09-08",
							"videos": [
								{
									"description": "2021-09-08-liveCoding-createReactAppWithComponent",
									"url": "https://drive.google.com/file/d/1Qcvodj9D7LSTiClj55-GOGmHe6C6VmlH"
								}
							],
							"title": "Function Components and Props",
							"bulkTopics": "Nesting Components:\r\n- Project organization II: The `components` folder\r\n- Exporting and Importing components\r\n- Using Components in JSX\r\n- When to use: Basic guidelines on when to create components\"",
							"activities": [
								{
									"kind": "exercise",
									"title": "TODO APP - Components",
									"when": "At the end of Nesting Components.",
									"time": "2 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/02-components",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/02-components",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Exercise was a 404, and the solution seems to be a TODO app from some other project."
								},
								{
									"kind": "exercise",
									"title": "Conditional Rendering in React",
									"when": "After Conditional rendering",
									"time": "30 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Confusing: It says to 'write component here' but a component isn't written at that point but merely the return statement of a component. It mentions passing properties but no properties are passed. Perhaps use the idea here of conditional rendering in another exercise."
								},
								{
									"kind": "liveCoding",
									"title": "How to create and use a function component with props",
									"outline": "- create `components\/Activity.jsx`\r\n- add props\r\n\t- add prop: `kind`\r\n\t- add prop: `title`\r\n- style and add SASS: `node i sass`, restart\r\n- add body \r\n\t- in style\r\n\t- add prop: `body`\r\n- put activities in data object\r\n\t- move data object to JSON\r\n- add images\r\n- make different HTML code area for each\r\n- compare to similar code in [FbW-D01-Course site](https:\/\/github.com\/FbW-D01\/FbW-D01-Course)"
								},
								{
									"kind": "exercise",
									"title": "Create a Developer Resource Website with a Functional Component",
									"description": "Create a React website that displays Howtos, Flashcards and Links on a website using one LearnItem component",
									"url": "https://github.com/FbW-D01/Exercise-445-SPA-COM-createADeveloperResourceWebsiteWithAFunctionalComponent",
									"released": true,
									"status": {
										"finished": "heavypete, elis-11, giacomotolari, Heba-Dughmosh, Consciously, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "reidfleites, osama274, bakkar3, Degi100, Khambazarov, paulam92, Suha995, Saeideh-Fasih, herrbaha, deyuhub"
									}
								}
							]
						},
						{
							"date": "2021-09-09",
							"title": "Class Components and Props",
							"bulkTopics": "\"Interaction:\r\n- Setting event handlers in JSX: \r\n- Defining event handlers in components\r\n- Binding component class to handlers and arrow functions\r\n- Manipulating state in events\"",
							"videos": [
								{
									"description": "2021-09-09-liveCoding-classComponents-exercise-446-part1of2",
									"url": "https://drive.google.com/file/d/1RmyBdAVoHTo8qohvawdrIbLIZyYG1jl6"
								},
								{
									"description": "2021-09-09-liveCoding-classComponents-exercise-446-part2of2",
									"url": "https://drive.google.com/file/d/1l5tmwy1v-PZrj5P5O2isAFE0M5AQ4Ka4"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Message Box II",
									"when": "After Conditional rendering",
									"time": "30 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering-3",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering-3/tree/solution",
									"url": "nnn",
									"description": "Create a message box (called 'alert' but is not an alert) component to which you send two properties `show` and `text`",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "A bit confusing in that it refers to a message box as an alert, and I showed this skill of sending a prop to a component in other exercises."
								},
								{
									"kind": "liveCoding",
									"title": "How to create a React class component",
									"image": "lvcClassComponent",
									"outline": "- create a blank react site\r\n- change the App.jsx to a class component\r\n- import the JSON file content as `pages`\r\n- from the App.jsx file pass the `pages` variable as a prop to the DisplayPages component\r\n- create the DisplayPages class component\r\n- list out all the pages"
								},
								{
									"kind": "exercise",
									"title": "Menu Component (using React Class Component)",
									"description": "Use the JSON file of page items to be able to generate various types of menus.",
									"url": "https://github.com/FbW-D01/Exercise-446-SPA-COM-menuComponent",
									"released": true,
									"status": {
										"finished": "osama274, heavypete, elis-11, Khambazarov, giacomotolari, Suha995, Consciously, herrbaha, Fatihce57, Pierluigi10",
										"unfinished": "reidfleites, bakkar3, Degi100, paulam92, Heba-Dughmosh, Saeideh-Fasih, deyuhub, NikoHamburg, gamzeumac"
									}
								}
							]
						},
						{
							"date": "2021-09-13",
							"title": "Events and State (string, numbers, boolean)",
							"bulkTopics": "\"Data flow:\r\n- Props & States definitions & difference\r\n- Accepting props\r\n- Passing props\r\n- initializing and updating states with useState\r\n- Using reducer of type with useReducer\r\n- Lazy initialization\"",
							"videos": [
								{
									"description": "2021-09-13-discussion-about-exercise-446",
									"url": "https://drive.google.com/file/d/1XZ2IAcytKjkr9NTKRP5dpCRLnWS1t3Yv"
								},
								{
									"description": "2021-09-13-explanation_liveCoding_conferenceWebsite_part_1_of_2",
									"url": "https://drive.google.com/file/d/17zryeAWeTR_jhrIhyPPsV99PYjUFCnhx"
								},
								{
									"description": "2021-09-13-explanation_liveCoding_conferenceWebsite_part_2_of_2",
									"url": "https://drive.google.com/file/d/1bdUpqA88QfFmKB6Zf8pJ8U7lLzxCuK_x"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Iron-hack",
									"when": "After State and Events",
									"time": "45 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-events-Iron-Hack",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-events-Iron-Hack/tree/solution",
									"url": "nnn",
									"description": "Create an App component that is a class component which calls both a function and a class component, passing props to each",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This exercise has 'event' in the URL but it has nothing to do with events. It seems to be more an exercise using function and class components. It also has instructions that say to create a create-react-app but this is already created in the exercise (?)."
								},
								{
									"kind": "explanation",
									"title": "State and Events in React",
									"outline": "- **state variables**:\r\n\t- paradigm shift: **procedural programming** (C++, Java, C#) --> **declarative programming** (SQL)\r\n\t\t- procedural bar: \"move one meter to left, grab a beer mug, move two meters to the right, pull the second lever until the beer mug is full, then hand me the full mug of beer\"\r\n\t\t- declarative bar: \"Ein Pils, bitte\"\r\n\t- paradigm shift: **imperative programming** (JavaScript\/DOM, jQuery) -->  **declarative programming** (React, Vue.js, Angular)\r\n\t\t- in imperative programming, you tell every component what to do when e.g. a button is clicked\r\n\t\t- in declarative programming, you create special state variables that change, then program the site to **react** to the changes in these special state variables\r\n\t\t\t- search example: [https:\/\/onespace.netlify.app\/techItems](https:\/\/onespace.netlify.app\/techItems)\r\n\t- what is state?\r\n\t\t- an instance of a React Component Class that can be defined as an object of a set of **observable** properties that control the behavior of the component\r\n\t\t- a variable that holds information that may change over the lifetime of the component, e.g.\r\n\t\t\t- `currentTime` (string)\r\n\t\t\t- `expanded` (boolean)\r\n\t\t\t- `todos` (array of objects)\r\n\t- state should contain data that a component's event handlers may change to trigger a UI update\r\n\t- in real apps, state variables tends to be very small and JSON-serializable\r\n\t- when building a stateful component, think about the minimal possible representation of its state, and only store those properties in it\r\n\t- ideally, each component should have a small amount of state to manage, avoid having a component that manages state of e.g. a JavaScript object with many levels of data\r\n\t- **differences between props and state variables:**\r\n\t\t- props variables are read-only, state variables can be changed\r\n\t\t- the state of one component will often become the props of a child component\r\n\t\t- use state to store the data your current page needs in your controller-view, use props to pass data & event handlers down to your child components\r\n- **events**:\r\n\t- handling React events are similar to handling events on DOM elements\r\n\t- event handlers are simply functions within a function component (or methods within a class component)\r\n\t- syntax for calling an event handler from JSX is straight-forward and much like in DOM: `<button onClick={() => this.toggleItems()}>`\r\n\t\t- React events are named using camelCase, e.g. `onClick` instead of `onclick`\r\n\t- you can pass arguments to event handlers from JSX, e.g. `<input type=\"text\" onChange={(e) => this.changeTitle(item.id, e)}\/>`\r\n\t\t- in the event handler, `e.target.value` will get value from the input field, and `id` can be used to find the item in the state array in order to change its `title` property with the new value entered by the user"
								},
								{
									"kind": "liveCoding",
									"image": "liveCodingConferenceStateEvent",
									"title": "Use event handlers in React to change, modify state, which alters the display of the component",
									"outline": "- examine real-life example of a collapsable item created with event/state\r\n\t- course website: submodule has objectives and resources that open and close\r\n\t- look at code which opens objects and resources\r\n\t\t- you need e.g. a boolean state variable: true = open, false = closed\r\n- **TASK: make a conference site which has two headers, Presentations and Speakers, which can be clicked to show information**\r\n\t- examine JSON file\r\n\t- make component: ExpandableInfo\r\n\t- style the app\r\n\t- change to SASS\r\n\t- make component display all info at beginning\r\n\t- add `expanded` variable and conditional rendering to show how the data displays correctly based on true or false\r\n\t- add click event and `toggleItems()` function to handle it\r\n\t- show how this doesn't work and why\r\n\t- add state variable to make it work",
									"preliveCode": "SPA4.05_COM_stateAndEvents_conferenceApp_prelive"
								},
								{
									"kind": "liveCoding",
									"title": "Event Handlers and Events in Class Components",
									"outline": "- **TASK: refactor the above live-coding example as class components in order to illustrate the differences in syntax**\r\n\t- convert `App` from function component to class component\r\n\t- convert `ExpandableInfo` from function component to class component\r\n\t\t- import React\r\n\t\t- add Constructor\r\n\t\t- convert useState() to component this.setState()\r\n\t\t- convert `toggleItems()` from function to class method\r\n\t\t- clean up all references, i.e. add `this.` where necessary",
									"preliveCode": "SPA4.05_COM_stateAndEvents_conferenceAppAsClassComponents_prelive"
								},
								{
									"kind": "exercise",
									"title": "Tech Item Flashcards",
									"description": "Use the given JSON file of full-stack developer technologies to create flashcards to help the user learn these technologies.",
									"url": "https://github.com/FbW-D01/Exercise-447-SPA-COM-techItemFlashcards",
									"status": {
										"finished": "osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10",
										"unfinished": "reidfleites, Suha995, deyuhub, gamzeumac"
									},
									"released": true
								},
								{
									"kind": "exercise",
									"title": "Light Switch",
									"when": "After State and Events",
									"time": "45 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-lightSwitch",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-lightSwitch/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-447-SPA-COM-lightSwitch",
									"description": "Create a room component with a lightswitch button which uses onClick() to make the room dark or light.",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "too simple, replaced with a more real-life example"
								},
								{
									"kind": "exercise",
									"title": "Envelop",
									"when": "After Props",
									"time": "45 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-render-envelop",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-render-envelop/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is only an exercise in props so not needed here."
								},
								{
									"kind": "exercise",
									"title": "Trello-Copy",
									"when": "After props",
									"time": "45 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-trello-copy",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-trello-copy/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Doesn't have any events."
								},
								{
									"kind": "exercise",
									"title": "Credit Card",
									"when": "After props",
									"time": "1.5 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-state-credit-card",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-state-credit-card/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Doesn't have any events."
								}
							]
						},
						{
							"date": "2021-09-14",
							"title": "Events and State (arrays, objects)",
							"bulkTopics": "\"Handling Forms:\r\n- A clash of state: State in vanilla HTML forms vs. state in react components\r\n- Controlled components: react state as the single source of truth\r\n- Controlling the value of inputs\r\n- Handling multiple inputs with one `onChange` handler\r\n- Submitting forms: making API calls on submit with data from state\r\n- Controlled Component\r\n- Mutable ref objects\"",
							"videos": [
								{
									"description": "2021-09-14-ex447-flashcards",
									"url": "https://drive.google.com/file/d/1UilWnbjfBi-T7O7eTGGHyz6ygoXBxwzt"
								},
								{
									"description": "2021-09-14-liveCoding-convertToClassComponent",
									"url": "https://drive.google.com/file/d/1BL_jMr28GpVzv9jhzxSHbwsRWX03d6xd"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"title": "Three ways to update state variables and why using an updater function is the best",
									"outline": "- try without state\r\n\t- create an array of numbers\r\n\t- display array with map()\r\n\t- make a button **Add Number**\r\n\t- make a button with a `onClick` handler that adds a number to the array\r\n\t- show that it works in the console **but not in the browser**\r\n\t\t- why not?\r\n\t\t- what do we have to do to get the browser to **react** to the **state** of this array?\r\n- add state\r\n\t- #1: **BAD**: change array\/object state variable and pass directly to setter\r\n\t- #2: **BETTER**: change array\/object state variable and pass a copy of it to the setter\r\n\t- #3: **BEST**: change array\/object state variable and pass it with an updater function\r\n\t\t- good explanation how method #3 works: [Stack Overflow: How can a React useState setter update this state variable without using the state variable?](https:\/\/stackoverflow.com\/questions\/69171553\/how-can-a-react-usestate-setter-update-this-state-variable-without-using-the-sta)\t\r\n- show how to use method #3 with an object state variable\r\n\t- see [Stack Overflow: Is this the safest, most correct way to change an object state variable in React?](https:\/\/stackoverflow.com\/questions\/69187100\/what-is-safest-most-correct-way-to-change-an-object-state-variable-in-react)"
								},
								{
									"kind": "exercise",
									"title": "Random Number Generator",
									"when": "After State and Events",
									"time": "60 mins",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-RandomNumberGenerator",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-RandomNumberGenerator/tree/solution",
									"url": "https://github.com/FbW-D01/Exercise-448-SPA-COM-RandomNumberGenerator",
									"description": "Create a RandomList component that shows a button and when you click the button, it adds another random number to the list. Store the array of numbers in component state, and demonstrate in code the three ways of updating state showing which is the optimal way to update state variables in React.",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Heba-Dughmosh, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, Pierluigi10",
										"unfinished": "Suha995, deyuhub, NikoHamburg, gamzeumac"
									},
									"released": true,
									"cancelled": false,
									"cancelledReason": ""
								},
								{
									"kind": "exercise",
									"title": "Chrono-Meter",
									"when": "After State and Events",
									"time": "1.5 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-events-chronometer",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-events-chronometer/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"adminMessage": "TODO: figure out this animation code, create a function component solution, and create a live-coding to prepare students for this exercise",
									"rawTopics": "",
									"topics": [
										{
											"title": "cancelAnimationFrame()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelAnimationFrame"
										},
										{
											"title": "requestAnimationFrame()",
											"url": "https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Has DOM animation code, interesting but not central to React events and we didn't have time for this one."
								},
								{
									"kind": "exercise",
									"title": "TODO APP - Props and State",
									"when": "At the end of State of the Union.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/03-props-and-state",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/03-props-and-state",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is that 'TODO APP' again which is unclear since it is not an exercise like the other exercises here, but part of some other larger project."
								},
								{
									"kind": "exercise",
									"title": "Props in React",
									"when": "After Props",
									"time": "30 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering-2",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-component-conditional-rendering-2/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is a very simple exercise in props and so doesn't really have a use here."
								}
							]
						},
						{
							"date": "2021-09-15",
							"title": "React State Practice",
							"bulkTopics": "\"Handling Forms:\r\n- A clash of state: State in vanilla HTML forms vs. state in react components\r\n- Controlled components: react state as the single source of truth\r\n- Controlling the value of inputs\r\n- Handling multiple inputs with one `onChange` handler\r\n- Submitting forms: making API calls on submit with data from state\r\n- Controlled Component\r\n- Mutable ref objects\"",
							"videos": [
								{
									"description": "2021-09-15-liveCoding-threeWaysToSaveArrayObjectState",
									"url": "https://drive.google.com/file/d/1j3PCyLTiIT-ERLmJIwRwJjshr4CltYPi"
								}
							],
							"activities": [
								{
									"kind": "exercise",
									"title": "Counter App with Components",
									"description": "Make a counter app with two counters and four components which use these counters: Muliplier, Adder, Subtracter, Divider",
									"url": "https://github.com/FbW-D01/Exercise-449-SPA-COM-counterAppWithComponents",
									"released": true,
									"status": {
										"finished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, paulam92, Suha995, Consciously, Saeideh-Fasih, herrbaha, Fatihce57, NikoHamburg, Pierluigi10, gamzeumac",
										"unfinished": "Heba-Dughmosh, deyuhub"
									}
								},
								{
									"kind": "exercise",
									"title": "TODO APP - Events and Forms",
									"when": "At the end of Handling Forms.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/04-events-forms",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/04-events-forms",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is the unclear Todo App again. The exercise is a 404 link."
								},
								{
									"kind": "exercise",
									"title": "React Fundamentals / Thinking in React",
									"when": "SPA - At the end of Functional Component and useState Hook.",
									"time": "1 hour",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-Thinking-in-react",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-Thinking-in-react/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is a large project which one has to refactor. But it doesn't have to do with forms."
								},
								{
									"kind": "exercise",
									"title": "React Calculator",
									"when": "SPA - At the end of Functional Component and useState Hook.",
									"time": "1 hour",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-calculator",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-calculator/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "A good example of a calculator in React, but has nothing to do with forms. This might be able to be used elsewhere in the Components submodule."
								}
							]
						},
						{
							"date": "2021-09-16",
							"title": "React State Revisited",
							"bulkTopics": "Introduction: Each component has a lifecycle\r\n\"Lifecycle events in a React component \r\n- Executing code on lifecycle stages: first rendering, update, unmount\r\n- Usage of the Effect Hook to perform side effects in function components\r\n- Self Learning: Less common lifecycle methods and React doc\"",
							"videos": [
								{
									"description": "2021-09-16-liveCoding-gael-counterApp",
									"url": "https://drive.google.com/file/d/1OWjZQIDxmNcw7QAekRnKWVPAaKYW5kSA"
								}
							],
							"activities": [
								{
									"kind": "liveCoding",
									"title": "State Revisited: A Counter App",
									"outline": "- Build a counter app to review the concepts of React state"
								}
							]
						},
						{
							"date": "2021-09-21",
							"title": "React Forms",
							"bulkTopics": "\"Basic Use Case: Retrieving data on load\r\n- Creating a simple spinner component with fontawsome\r\n- Conditionally rendering component with spinner before data is retrieved\r\n- Traditional lifecycle methods\"",
							"videos": [
								{
									"description": "2021-09-21_reactFormsBuildUserEntryForm",
									"url": "https://drive.google.com/file/d/1-oWTnRsv8IIWh1QxyH2e68ibNvuhUJae"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "React Forms",
									"outline": "- HTML forms\r\n\t- notoriously difficult\r\n\t- many moving parts\r\n\t- each control (radio buttons, dropdowns, checkboxes, input fields, textareas) works a bit differently\r\n\t- various approaches\r\n\t\t- form element with submit button with `action=<url>` and `method=POST`\r\n\t\t- non-submit button with custom handling of data and fetch GET\/POST\r\n- React forms are similar and different\r\n\t- same: notoriously difficult\r\n\t- same: many moving parts\r\n\t- different: use state\r\n\t- various approaches\r\n\t\t- **each form control has a state variable and the form submit button simply processes current values of state variables**\r\n\t\t- libraries such as [Formik](https:\/\/formik.org)\r\n\t\t\t- *\"takes care of the repetitive and annoying stuff...this means you spend less time wiring up state and change handlers and more time focusing on your business logic\"*"
								},
								{
									"kind": "liveCoding",
									"image": "lcCreateForm",
									"title": "Create a User-Entry Form",
									"outline": "- save [showcaseUsers.json](https:\/\/github.com\/FbW-D01\/FbW-D01-Course\/blob\/main\/_CODE\/showcaseUsers.json) into `\/src\/data`\r\n- in App.js, import `showcaseUsers.json` as `initialUsers`\r\n- create a state variable for `users` with default value `initialUsers`\t\r\n- display them in an HTML table\r\n- add another row with input boxes that have values: `firstName`, `lastName`\r\n\t- create state variables for these\r\n\t- create `onChange` events for the fields\r\n- add a button `Add User` with an `addUser` handler\r\n\t- get the values **not from the input fields** but from state variables\r\n\t- add the new users\r\n\t- blank out firstName, lastName\r\n\t- set focus in firstName: \r\n\t\t- `const inputRef = useRef(null);`\r\n\t\t- `inputRef.current.focus();`\r\n\t\t- `ref={inputRef}`\r\n\t\t- `useEffect`\r\n\t\t\t- *We put an empty [], if we want the code inside useEffect to run only once. Without empty [], the code inside the useEffect will run on every render.*\r\n- style appropriately\r\n\t- enable SASS (for table hierarchy styles)\r\n\t- `border-spacing: 3px;`\r\n\t- `border-collapse: separate;`"
								},
								{
									"kind": "realLifeCodeAnalysis",
									"title": "Giacomo's video search page",
									"outline": "- two dropdowns and a search box\r\n- logic that processes all three to find videos as user types"
								},
								{
									"kind": "realLifeCodeAnalysis",
									"title": "Datapod's Create and Delete pages",
									"outline": "- create page: radio buttons\r\n- delete page: array of choices from backend controller that fills dropdown"
								},
								{
									"kind": "exercise",
									"title": "Website Task Management App",
									"description": "Create an app that reads a JSON file of site tasks, displays them in a table, and allows the user to add a task",
									"url": "https://github.com/FbW-D01/Exercise-450-SPA-COM-websiteTaskManagementApp",
									"released": true,
									"status": {
										"finished": "reidfleites, heavypete, bakkar3, elis-11, Degi100, Khambazarov, giacomotolari, herrbaha, Fatihce57, Pierluigi10",
										"unfinished": "osama274, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, deyuhub, NikoHamburg, gamzeumac"
									}
								}
							]
						},
						{
							"date": "2021-09-22",
							"title": "Component Life Cycle & Retrieving API Data",
							"videos": [
								{
									"description": "2021-09-22-componentLifeCycleExplanationAndPreviewOfExercise451",
									"url": "https://drive.google.com/file/d/1Uc9mXJeqE62Nk9Dgie-6YeCryb4ugImK"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "React Component Life Cycle",
									"outline": "- both class and function components have life cycles\r\n\t- **function components are preferable to class components**\r\n\t\t- \"As of version 16.8 and 17.0, the term stateless functional components is misleading and should be avoided. Functional components can have a state and they can have hooks which act as the lifecycle methods, so they more or less overlap with class components and can be used instead of functional components.\"\r\n\t\t- two reasons why functional components are preferable in most cases\r\n\t\t\t- React provides **the `useEffect` hook which is a very clear and concise way to combine the `componentDidMount`, `componentDidUpdate` and `componentWillUnmount` lifecycle methods**\r\n\t\t\t- With hooks you can **more easily extract logic that can be easily shared across components** and testable, instead of bound up with individual classes or their parents. Classes are one big component that can't be broken down or reused\r\n\t- nevertheless, in order to be **backward-compatible** and understand React at a deeper level, one should at least have an understanding of class component life cycle that allows you to understand class component code\r\n- **class component life cycle**\r\n\t- Mounting methods\r\n\t\t- **constructor()**\r\n\t\t\t- as in any class, the constructor \"constructs the environment for the class,\" e.g. define variables with values for the class to use\r\n\t\t- componentWillMount()\r\n\t\t\t- deprecated\r\n\t\t\t- has little use since was between constructor and render\r\n\t\t- **render()**\r\n\t\t\t- implements the components on the DOM\r\n\t\t- **componentDidMount()**\r\n\t\t\t- after the HTML from render has finished loading\r\n\t\t\t- signals that the component and all its sub-components have rendered properly\r\n\t\t\t- the best place to make API calls \r\n\t\t\t- good place to do all the setup you couldn't have done without the DOM\r\n\t\t\t- add event listeners\r\n\t\t\t- draw on an element you just rendered\r\n\t- Updating methods\r\n\t\t- componentWillReceiveProps()\r\n\t\t\t- set to be deprecated in React 16.3.\r\n\t\t\t- here we have access to the next set of props and the present ones\r\n\t\t\t\t- check if anything has really changed\r\n\t\t- shouldComponentUpdate()\r\n\t\t\t- called before the component re-renders after receiving a new set of props or there's a new state\r\n\t\t\t- a good place to improve the performance of a component because it can help to prevent unnecessary re-rendering\r\n\t\t- componentWillUpdate()\r\n\t\t\t- deprecated in React 16.3\r\n\t\t- render()\r\n\t\t\t- implements the change on the DOM\r\n\t\t- **componentDidUpdate()**\r\n\t\t\t- called after any rendered HTML has finished loading\r\n\t\t\t- best place to perform an interaction with a non-React environment like the browser or making HTTP requests\r\n\t- Unmounting methods\r\n\t\t- **componentWillUnmount()**\r\n\t\t\t- called right before a component is removed from the DOM\r\n\t\t\t- perform any cleanups that should be done such as invalidating timers, canceling network requests, removing event listeners \r\n\t\t- componentDidCatch()\r\n\t\t\t- used to catch an unhandled JavaScript error in a child component tree and display a fallback UI instead of the component that crashed\r\n- **function component life cycle**\r\n\t- basic hooks\r\n\t\t- **useState()**\r\n\t\t\t- returns a stateful value, and a function to update it, and allows you to set a default value\r\n\t\t\t\t- `const [status, setStatus] = useState('online');`\r\n\t\t- **useEffect()**\r\n\t\t\t- like an escape hatch from React's purely functional world into the imperative world\r\n\t\t\t\t- *\"do this when this state variable changes\"*\r\n\t\t\t- by default, effects run after every completed render, but you can choose to fire them only when certain values have changed\r\n\t\t\t\t- `});`\r\n\t\t\t\t\t- execute everytime state variables change\r\n\t\t\t\t- `}, []);`\r\n\t\t\t\t\t- execute only on page load\r\n\t\t\t\t- `}, [firstName]);`\r\n\t\t\t\t\t- execute everytime the state variable `firstName` changes\r\n\t\t\t\t- `}, [firstName, lastName, status]);`\r\n\t\t\t\t\t- execute everytime one of the state variables `firstName`, `lastName` or `status` changes\r\n\t\t- **useContext()**\r\n\t\t\t- used to create common data that can be accessed throughout the component hierarchy without passing the props down manually to each level\r\n\t- additional hooks\r\n\t\t- useReducer()\r\n\t\t\t- alternative to useState\r\n\t\t\t- preferable to useState when you have complex state logic that involves multiple sub-values or when the next state depends on the previous one. useReducer also lets you optimize performance for components that trigger deep updates \r\n\t\t- **useRef()**\r\n\t\t\t- used primarily as a way to access the DOM\r\n\t\t\t\t- but also handy for keeping any mutable value around similar to how you'd use instance fields in classes\r\n\t\t\t\t- useRef() creates a plain JavaScript object\r\n\t\t\t- is like a box that can hold a mutable value in its `.current` property\r\n\t\t\t- keep in mind that useRef doesn\u2019t notify you when its content changes\r\n\t\t\t- mutating the `.current` property doesn\u2019t cause a re-render\r\n\t\t- useMemo()\r\n\t\t\t- used as a performance optimization\r\n\t\t\t- helps to avoid expensive calculations on every render\r\n\t\t- useCallback()\r\n\t\t\t- like `useMemo()` but passes an inline callback and an array of dependencies\r\n\t\t\t- `useCallback(fn, deps)` is equivalent to `useMemo(() => fn, deps)`\r\n\t\t- useImperativeHandle()\r\n\t\t\t- customizes the instance value that is exposed to parent components when using ref\r\n\t\t- useLayoutEffect()\r\n\t\t\t- signature is identical to useEffect, but it fires synchronously after all DOM mutations\r\n\t\t\t- use this to read layout from the DOM and synchronously re-render\r\n\t\t\t- updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint\r\n\t\t\t- if you're migrating code from a class component, note useLayoutEffect fires in the same phase as componentDidMount and componentDidUpdate\r\n\t\t\t- React recommends starting with useEffect first and only trying useLayoutEffect if that causes a problem\r\n\t\t- useDebugValue()\r\n\t\t\t- can be used to display a label for custom hooks in React DevTools\r\n\t- custom hooks\r\n\t\t- useToggle()\r\n\t\t\t- `const [isOnline, toggleIsOnline] = useToggle(false)`\r\n\t\t\t- `onClick={toggleIsOnline}`\r\n\t\t\t- `onClick={() => toggleIsOnline(true)}`\r\n\t\t\t- `onClick={() => toggleIsOnline(false)}`\r\n\t\t- useUpdateEffect()\r\n\t\t\t- execute only on update, not on page load\r\n\t\t- useArray()\r\n\t\t\t- `onClick={() => pushScore(7)}`\r\n\t\t\t- `onClick={() => update(1,9)}`\r\n\t\t\t- `onClick={() => remove(0)}`\r\n\t\t\t- `onClick={() => filter(n => n < 5)}`"
								},
								{
									"kind": "exercise",
									"title": "REACT LifeCycle",
									"when": "SPA - At the end of Common Lifecycle methods.",
									"time": "1 hour",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-LifeCycle",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-LifeCycle/tree/solution",
									"url": "nnn",
									"description": "a short exercise for exploring React's component lifecycle methods",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "confusing and unrealistic"
								},
								{
									"kind": "exercise",
									"title": "Lucky numbers",
									"when": "SPA - Component after Classy components and Eventual events.",
									"time": "2 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-components-state-lotto",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-components-state-lotto/tree/solution",
									"url": "nnn",
									"description": "Create a Lotto game which enables the user to click on a button to show button to generate random numbers",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is an interactive exercise, but doesn't use life cycle or useEffect. Perhaps use somewhere else?"
								},
								{
									"kind": "exercise",
									"title": "Customizable avatar component",
									"when": "SPA - Component after Proper properties.",
									"time": "1 hour.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-components-customizable-avatar",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-components-customizable-avatar/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is an interactive exericise but doesn't use life cycle or useEffect."
								},
								{
									"kind": "exercise",
									"title": "REACT Fruit-Component",
									"when": "SPA - Component after Eventual events.",
									"time": "1 hour.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-FruitComponent/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-FruitComponent/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is an interactive exericise but doesn't use life cycle or useEffect."
								},
								{
									"kind": "exercise",
									"title": "Create a Tic-Tac-Toe Game",
									"when": "SPA - Component after Eventual events.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-TicTacToe/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-TicTacToe/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is an interactive game and exercise, but doesn't use life cycle or useEffect. Perhaps use somewhere else?"
								},
								{
									"kind": "liveCoding",
									"title": "Site that fetches data from multiple APIs and displays it on the page",
									"image": "lcFetchFromApi",
									"outline": "- consume three different APIs from React frontend\r\n\t- [Northwind database](https:\/\/github.com\/graphql-compose\/graphql-compose-examples\/tree\/master\/examples\/northwind\/data\/json): products, raw\r\n\t\t- useEffect\/IIFE: products, response, data\r\n\t\t- state: products\r\n\t\t- `<li key={product.productID}>{product.name}<\/li>`\r\n\t\t- fetchData() with callback\r\n\t\t- remove reset.css\r\n\t- [News API](https:\/\/newsapi.org): Tech Crunch\r\n\t\t- display articles\r\n\t- consume JSON file from your own Netlify site\r\n\t\t- onespace\r\n\t\t- items_howtos.json to public\/api and commit\r\n\t\t- `_headers` not `\/public\/api but `\/public`\r\n\t\t\t- `\/*`\r\n\t\t\t- `Access-Control-Allow-Origin: *`\r\n\t\t- display howtos"
								},
								{
									"kind": "exercise",
									"title": "Fetch and Display Customer and Order Data from API",
									"description": "Fetch two JSON files via URL (customers and orders) then combine and display the data on the page",
									"url": "https://github.com/FbW-D01/Exercise-451-SPA-COM-fetchAndDisplayCustomerAndOrderDataFromAPI",
									"released": true,
									"status": {
										"finished": "Khambazarov, giacomotolari, Fatihce57, Pierluigi10",
										"unfinished": "reidfleites, osama274, heavypete, bakkar3, elis-11, Degi100, paulam92, Heba-Dughmosh, Suha995, Consciously, Saeideh-Fasih, herrbaha, deyuhub, NikoHamburg, gamzeumac"
									}
								},
								{
									"kind": "exercise",
									"title": "REACT ToDoList",
									"when": "SPA - At the end of Component.",
									"time": "2 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-ToDoList/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-ToDoList/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Another todo-list app, but doesn't fetch data as is the point of the current topic."
								},
								{
									"kind": "exercise",
									"title": "REACT MemoList",
									"when": "SPA - At the end of Component.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-MemoList/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-MemoList/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "A memo app, but doesn't fetch data as is the point of the current topic. Perhaps use elsewhere?"
								}
							]
						},
						{
							"date": "2021-09-23",
							"title": "UseContext(), UseReducer() and Custom Hooks",
							"bulkTopics": "(NOTE: changed this day topic from lifecycle pitfalls (exercises did not deal with this topic and didn't seem useful) to Extended Hooks which is a more useful topic.\"Lifecycle Pitfalls:\r\n- Unmounted component errors\r\n- Avoiding infinite loops\r\n- Deprecated methods and UNSAFE\"",
							"videos": [
								{
									"description": "2021-09-23-explanation_useContext_useReducer_customHooks",
									"url": "https://drive.google.com/file/d/1LlNuJ8oVjY43j2ng47NXe2nIsgNqQd-e"
								},
								{
									"description": "2021-09-23_liveCoding_fetchMultipleApisFromOneSite",
									"url": "https://drive.google.com/file/d/1VckaK0N8gcD6IOXb7B4_3qITV8fWGqpR"
								}
							],
							"activities": [
								{
									"kind": "explanation",
									"title": "useContext() and useReducer()",
									"outline": "- `useContext()`\r\n\t- *\"In a typical React application, data is passed top-down (parent to child) via props, but such usage can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree.\"* - [reactjs.org > useContext](https:\/\/reactjs.org\/docs\/context.html)\r\n\t- see how this works in [Datapod](https:\/\/github.com\/Entwickler-Club\/dpodreact\/blob\/dev\/src\/context\/ShowContext.jsx) with `createContext` and `useContext`\r\n- `useReducer()`\r\n\t- *\"useReducer is usually preferable to useState when you have complex state logic that involves multiple sub-values or when the next state depends on the previous one. If you\u2019re familiar with Redux, you already know how this works.\"* - [reactjs.org > useReducer](https:\/\/reactjs.org\/docs\/hooks-reference.html#usereducer)\r\n\t- see Datapod pages:\r\n\t\t- [Showcase: Counter Using State](https:\/\/github.com\/Entwickler-Club\/dpodreact\/blob\/dev\/src\/system\/components\/PageShowcaseCounterUsingState.tsx)\r\n\t\t- [Showcase: Counter Using Reducer](https:\/\/github.com\/Entwickler-Club\/dpodreact\/blob\/dev\/src\/system\/components\/PageShowcaseCounterUsingReducer.tsx)"
								},
								{
									"kind": "explanation",
									"title": "Three custom hooks: useToggle(), useUpdateEffect(), useArray()",
									"outline": "- see [video](https:\/\/www.youtube.com\/watch?v=0c6znExIqRw) that explains these\r\n- `useToggle()`\r\n\t- `const [isOnline, toggleIsOnline] = useToggle(false)`\r\n\t- `onClick={toggleIsOnline}`\r\n\t- `onClick={() => toggleIsOnline(true)}`\r\n\t- `onClick={() => toggleIsOnline(false)}`\r\n\t- [code from video](https:\/\/github.com\/WebDevSimplified\/useful-custom-react-hooks\/tree\/main\/src\/1-useToggle)\r\n\t- Datapod page [Showcase: useToggle()](https:\/\/github.com\/Entwickler-Club\/dpodreact\/blob\/dev\/src\/system\/components\/PageShowcaseUseToggle.tsx)\r\n- `useUpdateEffect()`\r\n\t- execute only on update, not on page load\r\n\t- [code from video](https:\/\/github.com\/WebDevSimplified\/useful-custom-react-hooks\/tree\/main\/src\/4-useUpdateEffect)\r\n\t- Datapod page: *under construction*\r\n- `useArray()`\r\n\t- `onClick={() => pushScore(7)}`\r\n\t- `onClick={() => update(1,9)}`\r\n\t- `onClick={() => remove(0)}`\r\n\t- `onClick={() => filter(n => n < 5)}`\r\n\t- [code from video](https:\/\/github.com\/WebDevSimplified\/useful-custom-react-hooks\/tree\/main\/src\/5-useArray)\r\n\t- Datapod page: *under construction*"
								},
								{
									"kind": "exercise",
									"title": "TODO: create an exercise which uses the useArray() and useToggle() hooks",
									"cancelled": true,
									"cancelledReason": "ran out of time and included useToggle() in previous exercise"
								},
								{
									"kind": "exercise",
									"title": "TODO APP - Lifecycle Methods",
									"when": "At the end of Lifecycle.",
									"time": "2 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/05-lifecycle",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/05-lifecycle",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is the unclear Todo App again. The exercise is a 404 link."
								},
								{
									"kind": "exercise",
									"title": "REACT LifeCycle1",
									"when": "SPA - At the end of Common Lifecycle methods.",
									"time": "1 hour",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-LifeCycle1",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-LifeCycle1/tree/solution/task7",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Is a complicated, confusing app which doesn't speak to lifecycle pitfalls specificy as is the original topic of this section. The solution is a 404 link."
								}
							]
						}
					]
				},
				{
					"title": "4.06 Router",
					"abbreviation": "ROU",
					"totalDays": 1,
					"overview": "Most applications will incorporate several views a user can navigate through. Although it is called a single page application, multiple pages are actually common practice. In this sub module, you will integrate a third party router library into your single page application to create a multi view app.",
					"objectives": [
						"Compare between traditional server side routing and client side routing in a SPA",
						"Compare and understand the difference between container components and display components",
						"Utilize third party component libraries for react",
						"Use react router to add routes and create a multi-view SPA as well as parameter based routing"
					],
					"resources": [
						{
							"url": "https://reactrouter.com/web/guides/quick-start",
							"title": "React Router - Quick Start"
						},
						{
							"url": "https://www.youtube.com/watch?v=110dW3l5GQY",
							"title": "React Router Tutorial - Ben Awad",
							"time": "17:11"
						}
					],
					"flashcards": [
						{
							"front": "Name 2 characteristics of React Router.",
							"back": "- React Router is the standard routing library for React\r\n- React Router enables the navigation among views of various components in a React Application, allows changing the browser URL, and keeps the UI in sync with the URL"
						}
					],
					"days": [
						{
							"date": "2021-09-27",
							"title": "React-Router for website menus",
							"bulkTopics": "Introduction: Routing in a Single Page Application with React Router\r\n\"3rd party component libraries:\r\n- Container components (manage state) vs. Display components (render dom)\r\n- Display component libraries: reactstrap (documentation and simple example)\r\n- Container components: react-router-dom (documentation)\"\r\n\"Route Components: Setting up react-router-dom\r\n- Brief overview: The Browser History API (what is it, where to read more)\r\n- Wrapping our app with a `<BrowserRouter>` container component\r\n- `<BrowserRouter>` vs. `<HashRouter>`: when to use\"\r\n\"Route Matching Components: Our first routes\r\n- Conditionally render according to URL: the `<Route>` component\r\n- Choosing only one route to render: `<Switch>`\r\n- Pitfalls: Order paths in `<Switch>`, Rendering exact paths with `exact`\r\n- Project Organization III: The `views` folder for page components\r\n- Leaving out the path: Rendering 404 components\"\r\n\"Building Navigation:\r\n- Using `<Link>` to navigate to a path\r\n- Creating a Navigation bar with `<NavLink activeClassName=\"\"[...]\"\">`\r\n- Library clash: Using reactstrap `<NavLink>` with react-router `<NavLink>`\r\n  https:\/\/github.com\/reactstrap\/reactstrap\/issues\/1285#issuecomment-446592497\r\n- Redirecting components: `<Redirect>`\"\r\n\"Route Parameters:\r\n- Creating dynamic route paths with route params: the `\/:<param>` notation\r\n- Route props: Accessing route params with the `match.params` prop\"",
							"activities": [
								{
									"kind": "exercise",
									"title": "TODO APP - Router Methods",
									"when": "At the end of Router.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/06-router",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/06-router",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Exercise link is a 404."
								},
								{
									"kind": "exercise",
									"title": "React_router1",
									"when": "SPA - While learning router",
									"time": "30 min.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-Router1/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-Router1/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is a complete website that does a lot more than React router and would take too long for the time we have."
								},
								{
									"kind": "exercise",
									"title": "Dog Finder",
									"when": "SPA - at the end of Router",
									"time": "1 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-router-dog-finder",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-router-dog-finder/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This isn't a complete menu app but only has one page."
								},
								{
									"kind": "exercise",
									"title": "Music Band Landing Page",
									"when": "SPA - at the end of Router",
									"time": "1 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-Router-band-landing-page",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-Router-band-landing-page/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "The images in the solution are all missing."
								},
								{
									"kind": "exercise",
									"title": "REACT Create_Blog",
									"when": "SPA - at the end of Router",
									"time": "3 hours",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-CreateBlog/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-CreateBlog/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution is poorly formatted and structured."
								},
								{
									"kind": "exercise",
									"title": "Color Factory",
									"when": "SPA - at the end of Nesting Router",
									"time": "2 hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-router-color-factory",
									"dciSolutionUrl": "https://github.com/DigitalCareerInstitute/SPA-router-color-factory/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "Solution is an unrealistic color-picker website."
								},
								{
									"kind": "exercise",
									"title": "React_Quiz",
									"when": "SPA - at the end of Router",
									"time": "2 days",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-CreateQuiz/tree/master",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-CreateQuiz/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": true,
									"cancelledReason": "This is a 2-day assignment and doesn't seem to have an obvious menu, i.e. has no pages."
								},
								{
									"kind": "liveCoding",
									"title": "Use React-Router to create a single-page-app with a menu and pages",
									"outline": "- Gaël"
								},
								{
									"kind": "realLifeCodeAnalysis",
									"title": "Analyze how React Router is used in Course website",
									"outline": "- identify react-router code starting in `Site.tsx`"
								},
								{
									"kind": "exercise",
									"title": "Flashcard site with menu",
									"description": "Extract all flashcards from the FbW-D01-Course website JSON file and display them on different pages of a single-page-app according to the submodule they belong to.",
									"url": "https://github.com/FbW-D01/Exercise-452-SPA-ROU-flashcardSiteWithMenu"
								}
							]
						}
					]
				},
				{
					"title": "4.07 Store",
					"abbreviation": "STO",
					"totalDays": 2,
					"overview": "Handling state in most applications is a confusing and often error prone task. Luckily, with third party state containers such as Redux, this task can become a breeze. In this sub module, you will implement various technologies in your single page applications to ensure proper state updates and consistant behavior.",
					"objectives": [
						"Understand the role and uses for a state container in a SPA",
						"Manage state container with useReducer() and Context API",
						"Save and retrieve persistent data from localStorage"
					],
					"resources": [
						{
							"title": "How to use local storage with React Hooks",
							"url": "https://www.youtube.com/watch?v=YSQqHKIE-eM",
							"time": "10:03"
						},
						{
							"title": "Learn useContext In 13 Minutes - Kyle",
							"url": "https://www.youtube.com/watch?v=5LrDIWkK_Bc",
							"time": "13:07"
						},
						{
							"title": "Learn useReducer In 20 Minutes - Kyle",
							"url": "https://www.youtube.com/watch?v=kK_Wqx3RnHk",
							"time": "20:11"
						},
						{
							"title": "Introduction to MobX & React in 2020",
							"url": "https://www.youtube.com/watch?v=pnhIJA64ByY",
							"time": "16:50"
						}
					],
					"days": [
						{
							"date": "2021-09-28",
							"title": "useContext and useReducer",
							"bulkTopics": "\"Context API;\r\n- Provider and Consumer component\r\n- Consume the Context `useContext`\r\n- Enhance the context using a Reducer `useReducer`\"",
							"activities": [
								{
									"kind": "exercise",
									"title": "useRecuder Boating",
									"when": "After Enhance the context using a Reducer useReducer.",
									"time": "~ 3hr",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-Store-UseReducerBoating/tree/main",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-Store-UseReducerBoating/tree/solution",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": false,
									"cancelledReason": ""
								}
							]
						},
						{
							"date": "2021-09-29",
							"title": "localStorage and Mobx",
							"bulkTopics": "\"Basic State Management Concepts:\r\n- Local state & global state\r\n- The nightmare of drilling state through props\r\n- What is a state container?\"\r\n\"Advanced Implementation:\r\n- Define action types\r\n- Handling side effects\r\n- CRUD App with React Hooks & the Context API\"\r\n",
							"activities": [
								{
									"kind": "exercise",
									"title": "TODO APP - Redux",
									"when": "At the end of Redux.",
									"time": "1 day.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/08-Context-API",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/08-Context-API",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": false,
									"cancelledReason": "Had no exercise link."
								},
								{
									"kind": "exercise",
									"title": "TODO APP - Thunk",
									"when": "At the end of \"Enhance the context using a Reducer useReducer\".",
									"time": "1 day.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/09-UseReducer-Hook",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/09-UseReducer-Hook",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": false,
									"cancelledReason": "Had no exercise link."
								}
							]
						}
					]
				},
				{
					"title": "4.08 Deployment",
					"abbreviation": "DEP",
					"totalDays": 1,
					"overview": "The power of a single page application comes from the fact that is runs entirely on the client side, and as such, it can be served from any static server. In this sub module, you will deploy a single page application to Netlify, as well as learn about the differences between a development and production environment.",
					"objectives": [
						"Understand the role of a Single Page application as a “static” program",
						"Upload and deploy Single Page applications to Netlify",
						"Identify common pitfalls with client side routing and Netlify pages and work around those pitfalls"
					],
					"resources": [
						{
							"title": "nnn",
							"url": "https://www.youtube.com/watch?v=_QvXwnXuoSM",
							"time": "4:21"
						}
					],
					"days": [
						{
							"date": "2021-09-30",
							"title": "Deploy at Netlify",
							"bulkTopics": "\"Deployment of React Apps\r\n- JAM stack and serveless infrastructure\r\n- GitHub, GitHub pages and Actions\r\n- Vercel: architecture, cli setup and deployment\r\n- Heroku: architecture, cli setup and deployment\r\n- Firebase: architecture and deployment\r\n- Netlify: architecture and deployment\"",
							"activities": [
								{
									"kind": "exercise",
									"title": "TODO APP - Deployment",
									"when": "At the end of Deployment.",
									"time": "3 hours.",
									"exerciseNumber": "nnn",
									"dciExerciseUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/task/07-deployment",
									"dciSolutionUrl": " https://github.com/DigitalCareerInstitute/SPA-todo-app/tree/stage/07-deployment",
									"url": "nnn",
									"description": "nnn",
									"rawTopics": "",
									"topics": [
										{
											"title": "nnn",
											"url": "nnn"
										}
									],
									"status": {
										"finished": "",
										"doing": ""
									},
									"released": false,
									"cancelled": false,
									"cancelledReason": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"title": "5. Backend",
			"abbreviation": "BE"
		}
	]
}